#define _CRT_SECURE_NO_WARNINGS   #define includev$ 0 #define definev$ 1 #define mainv$ 2 #define ifv$ 3 #define thenv$ 4 #define whilev$ 5 #define dov$ 6 #define staticv$ 7 #define intv$ 8 #define doublev$ 9 #define structv$ 10 #define breakv$ 11 #define elsev$ 12 #define longv$ 13 #define switchv$ 14 #define casev$ 15 #define typedefv$ 16 #define charv$ 17 #define returnv$ 18 #define constv$ 19 #define floatv$ 20 #define shortv$ 21 #define continuev$ 22 #define forv$ 23 #define voidv$ 24 #define sizeofv$ 25 #define defaultv$ 26 #define IDv$ 27 #define integerv$ 28 #define realv$ 29 #define addv$ 30 #define addequalv$ 31 #define addaddv$ 32 #define subv$ 33 #define subsubv$ 34 #define subequalv$ 35 #define multiplev$ 36 #define multipleequalv$ 37 #define dividev$ 38 #define divideequalv$ 39 #define colonv$ 40 #define equalv$ 41 #define lessv$ 42 #define notequalv$ 43 #define lessequalv$ 44 #define greaterv$ 45 #define greaterequalv$ 46 #define assign$ 47 #define semicolonv$ 48 #define leftbracketv$ 49 #define rightbracketv$ 50 #define realev$ 51 #define undefinedv$ 52 #define stringv$ 53 #define characterv$ 54  #include <cstdio> #include <cstdlib> #include <algorithm> #include <cstring> #include <cmath> #include <Windows.h> using namespace std;  const int maxn = 1e5 + 5; const char *codeToStr[] = {"#include","#define", "main", "if", "then", "while", "do", "static", "int", "double", "struct", "break", "else", "long", "switch", "case", "typedef", "char", "return", "const", "float", "short", "continue", "for", "void", "sizeof", "default", "identifier", "integer", "real", "add", "addequal", "addadd", "sub", "subsub", "subequal", "multiple", "multipleequal", "divide", "divideequal", "colon", "equal", "less", "notequal", "lessequal", "greater", "greaterequal", "assign$", "semicolon", "leftbracket", "rightbracket", "reale", "undefined", "string", "character"};  struct wordTuple { char *word; int len; int typeCode; void setWrod(char *source, int sz, int tc) { len = sz + 3; word = (char *)malloc(len); memset(word, 0, sizeof(word)); strncpy(word, source, sz); word[sz] = 0; typeCode = tc; }  void printWord() { getTypeCode(); printf("word: %s", word); for (int i = 0; i < 26 - len; i++) printf(" "); printf("\t typeCode: %3d\t", typeCode); if (typeCode == integerv$) puts("整数"); else if (typeCode == realv$) puts("实数"); else if (typeCode == realev$) puts("科学计数法"); else if (typeCode == IDv$) puts("标识符"); else if (typeCode == characterv$) puts("字符"); else if (typeCode == stringv$) puts("字符串"); else puts(""); }  void getTypeCode() { if (typeCode == IDv$) { for (int i = 2; i <= 26; i++) { if (strcmp(word, codeToStr[i]) == 0) { typeCode = i; break; } } } } };  void preprocess(char *input, char *output) { int len = strlen(input); int i = 0, j = 0; bool spaceGot = false, lineCommentGot = false, blockCommentGot = false, stringGot = false; while (i < len) { char tmpch = input[i];  if (!lineCommentGot && !blockCommentGot && !stringGot && !spaceGot && (tmpch == ' ' || tmpch == '\n' || tmpch == '\t' || tmpch == '\r')) { spaceGot = true; output[j] = ' '; i++; j++; continue; }  if (!lineCommentGot && !blockCommentGot && !stringGot && tmpch == '"' && i - 1 > 0 && input[i - 1] != '\\' && input[i - 1] != '\'') { stringGot = true; spaceGot = false; output[j] = tmpch; j++; i++; continue; }  if (!blockCommentGot && !stringGot && tmpch == '/' && i != len - 1 && input[i + 1] == '/') { i += 2; lineCommentGot = true; spaceGot = false; continue; }  if (!lineCommentGot && !stringGot && tmpch == '/' && i != len - 1 && input[i + 1] == '*') { i += 2; blockCommentGot = true; spaceGot = false; continue; }  if (!lineCommentGot && !blockCommentGot && !stringGot && spaceGot && (tmpch == ' ' || tmpch == '\n' || tmpch == '\t' || tmpch == '\r')) { i++; continue; }  if (!blockCommentGot && !stringGot && lineCommentGot && tmpch != '\n') { i++; continue; }  if (!lineCommentGot && !stringGot && blockCommentGot && (tmpch != '*' || (i != len - 1 && input[i + 1] != '/'))) { i++; continue; }  if (!stringGot && !blockCommentGot && lineCommentGot && tmpch == '\n') { i++; lineCommentGot = false; continue; }  if (!stringGot && !lineCommentGot && blockCommentGot && tmpch == '*' && i != len - 1 && input[i + 1] == '/') { blockCommentGot = false; i += 2; continue; }  if (!lineCommentGot && !blockCommentGot && stringGot && tmpch == '"' && i - 1 > 0 && input[i - 1] != '\\' && input[i - 1] != '\'') { stringGot = false; output[j] = tmpch; j++; i++; continue; }  output[j] = input[i]; i++; j++; spaceGot = blockCommentGot = lineCommentGot = false; } output[j] = 0; }  bool islower(char ch) { return ch >= 'a' && ch <= 'z'; }  bool isupper(char ch) { return ch >= 'A' && ch <= 'Z'; }  bool isdigit(char ch) { return ch >= '0' && ch <= '9'; }  void errorExit() { printf("Error"); exit(0); }  int wordParse(char *input, wordTuple *output) { int len = strlen(input), j = 0, i = 0; while (i < len) { char ch = input[i];  if (islower(ch) || isupper(ch) || ch == '_') { int k = i; char tmpch = input[k]; while (islower(tmpch) || isupper(tmpch) || isdigit(tmpch) || tmpch == '_') { tmpch = input[++k]; } output[j++].setWrod(input + i, k - i, IDv$); i = k; continue; }  if (isdigit(ch)) { int k = i; char tmpch = input[k]; while (isdigit(tmpch)) { tmpch = input[++k]; }  if (tmpch == '.') { tmpch = input[++k]; while (isdigit(tmpch)) { tmpch = input[++k]; }  if (tmpch == 'e' || tmpch == 'E') { tmpch = input[++k]; if (isdigit(tmpch)) { while (isdigit(tmpch)) { tmpch = input[++k]; } output[j++].setWrod(input + i, k - i, realv$); i = k; continue; } else { errorExit(); } }  else { output[j++].setWrod(input + i, k - i, realv$); i = k; continue; } }  else if (tmpch == 'e' || tmpch == 'E') { tmpch = input[++k];  if (isdigit(tmpch)) { while (isdigit(tmpch)) { tmpch = input[++k]; } output[j++].setWrod(input + i, k - i, realev$); i = k; continue; }  else { errorExit(); } }  else { output[j++].setWrod(input + i, k - i, integerv$); i = k; continue; } }  if (ch == '\'') { if (i + 1 < len) { char tmpch = input[i + 1]; if (tmpch == '\\' && +3 < len && input[i + 3] == '\'') { output[j++].setWrod(input + i + 1, 2, characterv$); i = i + 4; continue; } else if (tmpch >= 20 && tmpch <= 126 && input[i + 2] == '\'') { output[j++].setWrod(input + i + 1, 1, characterv$); i = i + 3; continue; } else { errorExit(); } } else { errorExit(); } }  if (ch == '"') { }  if (ch == '#') { if (i + 7 < len && strncmp(input + i, codeToStr[0], 8) == 0) { output[j++].setWrod(input + i, 8, includev$); i = i + 8; } else if (i + 6 < len && strncmp(input + i, codeToStr[1], 7) == 0) { output[j++].setWrod(input + i, 7, definev$); i = i + 7; } else { errorExit(); } } i++; } return j; } int main() {  freopen("data.out", "w+", stdout); freopen("data.in", "r", stdin); char *sourceCodeInput = (char *)malloc(maxn); char *preprocessOutput = (char *)malloc(maxn); memset(preprocessOutput, 0, maxn); memset(sourceCodeInput, 0, maxn);  for (int i = 0; scanf("%c", sourceCodeInput + i) != EOF; i++) ;  preprocess(sourceCodeInput, preprocessOutput);  for (int i = 0; i < (int)strlen(preprocessOutput); i++) { printf("%c", preprocessOutput[i]); } puts("");  wordTuple *wordParseOutput = (wordTuple *)malloc(sizeof(wordTuple) * maxn); int wordsLen = wordParse(preprocessOutput, wordParseOutput);  for (int i = 0; i < wordsLen; i++) { wordParseOutput[i].printWord(); } int 3lsdg; double 3elg; return 0; } 

!!!!!!!!!!!!!!!!!!!!
整数或实数后面不能跟非空格

!!!!!!!!!!!!!!!!!!!!

!!!!!!!!!!!!!!!!!!!!
科学计数法至少应当有一个指数位

!!!!!!!!!!!!!!!!!!!!
word: #define                   	typecode: 1	key word
word: _CRT_SECURE_NO_WARNINGS   	typecode: 27	identifier
word: #define                   	typecode: 1	key word
word: includev                  	typecode: 27	identifier
word: 0                         	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: definev                   	typecode: 27	identifier
word: 1                         	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: mainv                     	typecode: 27	identifier
word: 2                         	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: ifv                       	typecode: 27	identifier
word: 3                         	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: thenv                     	typecode: 27	identifier
word: 4                         	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: whilev                    	typecode: 27	identifier
word: 5                         	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: dov                       	typecode: 27	identifier
word: 6                         	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: staticv                   	typecode: 27	identifier
word: 7                         	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: intv                      	typecode: 27	identifier
word: 8                         	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: doublev                   	typecode: 27	identifier
word: 9                         	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: structv                   	typecode: 27	identifier
word: 10                        	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: breakv                    	typecode: 27	identifier
word: 11                        	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: elsev                     	typecode: 27	identifier
word: 12                        	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: longv                     	typecode: 27	identifier
word: 13                        	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: switchv                   	typecode: 27	identifier
word: 14                        	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: casev                     	typecode: 27	identifier
word: 15                        	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: typedefv                  	typecode: 27	identifier
word: 16                        	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: charv                     	typecode: 27	identifier
word: 17                        	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: returnv                   	typecode: 27	identifier
word: 18                        	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: constv                    	typecode: 27	identifier
word: 19                        	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: floatv                    	typecode: 27	identifier
word: 20                        	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: shortv                    	typecode: 27	identifier
word: 21                        	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: continuev                 	typecode: 27	identifier
word: 22                        	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: forv                      	typecode: 27	identifier
word: 23                        	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: voidv                     	typecode: 27	identifier
word: 24                        	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: sizeofv                   	typecode: 27	identifier
word: 25                        	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: defaultv                  	typecode: 27	identifier
word: 26                        	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: IDv                       	typecode: 27	identifier
word: 27                        	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: integerv                  	typecode: 27	identifier
word: 28                        	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: realv                     	typecode: 27	identifier
word: 29                        	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: addv                      	typecode: 27	identifier
word: 30                        	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: addequalv                 	typecode: 27	identifier
word: 31                        	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: addaddv                   	typecode: 27	identifier
word: 32                        	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: subv                      	typecode: 27	identifier
word: 33                        	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: subsubv                   	typecode: 27	identifier
word: 34                        	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: subequalv                 	typecode: 27	identifier
word: 35                        	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: multiplev                 	typecode: 27	identifier
word: 36                        	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: multipleequalv            	typecode: 27	identifier
word: 37                        	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: dividev                   	typecode: 27	identifier
word: 38                        	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: divideequalv              	typecode: 27	identifier
word: 39                        	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: colonv                    	typecode: 27	identifier
word: 40                        	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: equalv                    	typecode: 27	identifier
word: 41                        	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: lessv                     	typecode: 27	identifier
word: 42                        	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: notequalv                 	typecode: 27	identifier
word: 43                        	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: lessequalv                	typecode: 27	identifier
word: 44                        	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: greaterv                  	typecode: 27	identifier
word: 45                        	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: greaterequalv             	typecode: 27	identifier
word: 46                        	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: assign                    	typecode: 27	identifier
word: 47                        	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: semicolonv                	typecode: 27	identifier
word: 48                        	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: leftbracketv              	typecode: 27	identifier
word: 49                        	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: rightbracketv             	typecode: 27	identifier
word: 50                        	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: realev                    	typecode: 27	identifier
word: 51                        	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: undefinedv                	typecode: 27	identifier
word: 52                        	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: stringv                   	typecode: 27	identifier
word: 53                        	typecode: 28	integer
word: #define                   	typecode: 1	key word
word: characterv                	typecode: 27	identifier
word: 54                        	typecode: 28	integer
word: #include                  	typecode: 0	key word
word: #include                  	typecode: 0	key word
word: #include                  	typecode: 0	key word
word: #include                  	typecode: 0	key word
word: #include                  	typecode: 0	key word
word: #include                  	typecode: 0	key word
word: using                     	typecode: 27	identifier
word: namespace                 	typecode: 27	identifier
word: std                       	typecode: 27	identifier
word: ;                         	typecode: 48	semicolon
word: const                     	typecode: 19	key word
word: int                       	typecode: 8	key word
word: maxn                      	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: 1e5                       	typecode: 51	reale
word: +                         	typecode: 30	add
word: 5                         	typecode: 28	integer
word: ;                         	typecode: 48	semicolon
word: const                     	typecode: 19	key word
word: char                      	typecode: 17	key word
word: *                         	typecode: 36	multiple
word: codeToStr                 	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: {                         	typecode: 55	leftbrace
word: "#include"                	typecode: 53	string
word: "#define"                 	typecode: 53	string
word: "main"                    	typecode: 53	string
word: "if"                      	typecode: 53	string
word: "then"                    	typecode: 53	string
word: "while"                   	typecode: 53	string
word: "do"                      	typecode: 53	string
word: "static"                  	typecode: 53	string
word: "int"                     	typecode: 53	string
word: "double"                  	typecode: 53	string
word: "struct"                  	typecode: 53	string
word: "break"                   	typecode: 53	string
word: "else"                    	typecode: 53	string
word: "long"                    	typecode: 53	string
word: "switch"                  	typecode: 53	string
word: "case"                    	typecode: 53	string
word: "typedef"                 	typecode: 53	string
word: "char"                    	typecode: 53	string
word: "return"                  	typecode: 53	string
word: "const"                   	typecode: 53	string
word: "float"                   	typecode: 53	string
word: "short"                   	typecode: 53	string
word: "continue"                	typecode: 53	string
word: "for"                     	typecode: 53	string
word: "void"                    	typecode: 53	string
word: "sizeof"                  	typecode: 53	string
word: "default"                 	typecode: 53	string
word: "identifier"              	typecode: 53	string
word: "integer"                 	typecode: 53	string
word: "real"                    	typecode: 53	string
word: "add"                     	typecode: 53	string
word: "addequal"                	typecode: 53	string
word: "addadd"                  	typecode: 53	string
word: "sub"                     	typecode: 53	string
word: "subsub"                  	typecode: 53	string
word: "subequal"                	typecode: 53	string
word: "multiple"                	typecode: 53	string
word: "multipleequal"           	typecode: 53	string
word: "divide"                  	typecode: 53	string
word: "divideequal"             	typecode: 53	string
word: "colon"                   	typecode: 53	string
word: "equal"                   	typecode: 53	string
word: "less"                    	typecode: 53	string
word: "notequal"                	typecode: 53	string
word: "lessequal"               	typecode: 53	string
word: "greater"                 	typecode: 53	string
word: "greaterequal"            	typecode: 53	string
word: "assign$"                 	typecode: 53	string
word: "semicolon"               	typecode: 53	string
word: "leftbracket"             	typecode: 53	string
word: "rightbracket"            	typecode: 53	string
word: "reale"                   	typecode: 53	string
word: "undefined"               	typecode: 53	string
word: "string"                  	typecode: 53	string
word: "character"               	typecode: 53	string
word: }                         	typecode: 56	rightbrace
word: ;                         	typecode: 48	semicolon
word: struct                    	typecode: 10	key word
word: wordTuple                 	typecode: 27	identifier
word: {                         	typecode: 55	leftbrace
word: char                      	typecode: 17	key word
word: *                         	typecode: 36	multiple
word: word                      	typecode: 27	identifier
word: ;                         	typecode: 48	semicolon
word: int                       	typecode: 8	key word
word: len                       	typecode: 27	identifier
word: ;                         	typecode: 48	semicolon
word: int                       	typecode: 8	key word
word: typeCode                  	typecode: 27	identifier
word: ;                         	typecode: 48	semicolon
word: void                      	typecode: 24	key word
word: setWrod                   	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: char                      	typecode: 17	key word
word: *                         	typecode: 36	multiple
word: source                    	typecode: 27	identifier
word: int                       	typecode: 8	key word
word: sz                        	typecode: 27	identifier
word: int                       	typecode: 8	key word
word: tc                        	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: {                         	typecode: 55	leftbrace
word: len                       	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: sz                        	typecode: 27	identifier
word: +                         	typecode: 30	add
word: 3                         	typecode: 28	integer
word: ;                         	typecode: 48	semicolon
word: word                      	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: (                         	typecode: 49	leftbracket
word: char                      	typecode: 17	key word
word: *                         	typecode: 36	multiple
word: )                         	typecode: 50	rightbracket
word: malloc                    	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: len                       	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: ;                         	typecode: 48	semicolon
word: memset                    	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: word                      	typecode: 27	identifier
word: 0                         	typecode: 28	integer
word: sizeof                    	typecode: 25	key word
word: (                         	typecode: 49	leftbracket
word: word                      	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: )                         	typecode: 50	rightbracket
word: ;                         	typecode: 48	semicolon
word: strncpy                   	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: word                      	typecode: 27	identifier
word: source                    	typecode: 27	identifier
word: sz                        	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: ;                         	typecode: 48	semicolon
word: word                      	typecode: 27	identifier
word: sz                        	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: 0                         	typecode: 28	integer
word: ;                         	typecode: 48	semicolon
word: typeCode                  	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: tc                        	typecode: 27	identifier
word: ;                         	typecode: 48	semicolon
word: }                         	typecode: 56	rightbrace
word: void                      	typecode: 24	key word
word: printWord                 	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: )                         	typecode: 50	rightbracket
word: {                         	typecode: 55	leftbrace
word: getTypeCode               	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: )                         	typecode: 50	rightbracket
word: ;                         	typecode: 48	semicolon
word: printf                    	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: "word: %s"                	typecode: 53	string
word: word                      	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: ;                         	typecode: 48	semicolon
word: for                       	typecode: 23	key word
word: (                         	typecode: 49	leftbracket
word: int                       	typecode: 8	key word
word: i                         	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: 0                         	typecode: 28	integer
word: ;                         	typecode: 48	semicolon
word: i                         	typecode: 27	identifier
word: <                         	typecode: 42	less
word: 26                        	typecode: 28	integer
word: -                         	typecode: 33	sub
word: len                       	typecode: 27	identifier
word: ;                         	typecode: 48	semicolon
word: i                         	typecode: 27	identifier
word: ++                        	typecode: 32	addadd
word: )                         	typecode: 50	rightbracket
word: printf                    	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: " "                       	typecode: 53	string
word: )                         	typecode: 50	rightbracket
word: ;                         	typecode: 48	semicolon
word: printf                    	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: "\t typeCode: %3d\t"      	typecode: 53	string
word: typeCode                  	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: ;                         	typecode: 48	semicolon
word: if                        	typecode: 3	key word
word: (                         	typecode: 49	leftbracket
word: typeCode                  	typecode: 27	identifier
word: ==                        	typecode: 41	equal
word: integerv                  	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: puts                      	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: "整数"                  	typecode: 53	string
word: )                         	typecode: 50	rightbracket
word: ;                         	typecode: 48	semicolon
word: else                      	typecode: 12	key word
word: if                        	typecode: 3	key word
word: (                         	typecode: 49	leftbracket
word: typeCode                  	typecode: 27	identifier
word: ==                        	typecode: 41	equal
word: realv                     	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: puts                      	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: "实数"                  	typecode: 53	string
word: )                         	typecode: 50	rightbracket
word: ;                         	typecode: 48	semicolon
word: else                      	typecode: 12	key word
word: if                        	typecode: 3	key word
word: (                         	typecode: 49	leftbracket
word: typeCode                  	typecode: 27	identifier
word: ==                        	typecode: 41	equal
word: realev                    	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: puts                      	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: "科学计数法"         	typecode: 53	string
word: )                         	typecode: 50	rightbracket
word: ;                         	typecode: 48	semicolon
word: else                      	typecode: 12	key word
word: if                        	typecode: 3	key word
word: (                         	typecode: 49	leftbracket
word: typeCode                  	typecode: 27	identifier
word: ==                        	typecode: 41	equal
word: IDv                       	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: puts                      	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: "标识符"               	typecode: 53	string
word: )                         	typecode: 50	rightbracket
word: ;                         	typecode: 48	semicolon
word: else                      	typecode: 12	key word
word: if                        	typecode: 3	key word
word: (                         	typecode: 49	leftbracket
word: typeCode                  	typecode: 27	identifier
word: ==                        	typecode: 41	equal
word: characterv                	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: puts                      	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: "字符"                  	typecode: 53	string
word: )                         	typecode: 50	rightbracket
word: ;                         	typecode: 48	semicolon
word: else                      	typecode: 12	key word
word: if                        	typecode: 3	key word
word: (                         	typecode: 49	leftbracket
word: typeCode                  	typecode: 27	identifier
word: ==                        	typecode: 41	equal
word: stringv                   	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: puts                      	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: "字符串"               	typecode: 53	string
word: )                         	typecode: 50	rightbracket
word: ;                         	typecode: 48	semicolon
word: else                      	typecode: 12	key word
word: puts                      	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: ""                        	typecode: 53	string
word: )                         	typecode: 50	rightbracket
word: ;                         	typecode: 48	semicolon
word: }                         	typecode: 56	rightbrace
word: void                      	typecode: 24	key word
word: getTypeCode               	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: )                         	typecode: 50	rightbracket
word: {                         	typecode: 55	leftbrace
word: if                        	typecode: 3	key word
word: (                         	typecode: 49	leftbracket
word: typeCode                  	typecode: 27	identifier
word: ==                        	typecode: 41	equal
word: IDv                       	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: {                         	typecode: 55	leftbrace
word: for                       	typecode: 23	key word
word: (                         	typecode: 49	leftbracket
word: int                       	typecode: 8	key word
word: i                         	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: 2                         	typecode: 28	integer
word: ;                         	typecode: 48	semicolon
word: i                         	typecode: 27	identifier
word: <=                        	typecode: 44	lessequal
word: 26                        	typecode: 28	integer
word: ;                         	typecode: 48	semicolon
word: i                         	typecode: 27	identifier
word: ++                        	typecode: 32	addadd
word: )                         	typecode: 50	rightbracket
word: {                         	typecode: 55	leftbrace
word: if                        	typecode: 3	key word
word: (                         	typecode: 49	leftbracket
word: strcmp                    	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: word                      	typecode: 27	identifier
word: codeToStr                 	typecode: 27	identifier
word: i                         	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: ==                        	typecode: 41	equal
word: 0                         	typecode: 28	integer
word: )                         	typecode: 50	rightbracket
word: {                         	typecode: 55	leftbrace
word: typeCode                  	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: i                         	typecode: 27	identifier
word: ;                         	typecode: 48	semicolon
word: break                     	typecode: 11	key word
word: ;                         	typecode: 48	semicolon
word: }                         	typecode: 56	rightbrace
word: }                         	typecode: 56	rightbrace
word: }                         	typecode: 56	rightbrace
word: }                         	typecode: 56	rightbrace
word: }                         	typecode: 56	rightbrace
word: ;                         	typecode: 48	semicolon
word: void                      	typecode: 24	key word
word: preprocess                	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: char                      	typecode: 17	key word
word: *                         	typecode: 36	multiple
word: input                     	typecode: 27	identifier
word: char                      	typecode: 17	key word
word: *                         	typecode: 36	multiple
word: output                    	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: {                         	typecode: 55	leftbrace
word: int                       	typecode: 8	key word
word: len                       	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: strlen                    	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: input                     	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: ;                         	typecode: 48	semicolon
word: int                       	typecode: 8	key word
word: i                         	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: 0                         	typecode: 28	integer
word: j                         	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: 0                         	typecode: 28	integer
word: ;                         	typecode: 48	semicolon
word: bool                      	typecode: 27	identifier
word: spaceGot                  	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: false                     	typecode: 27	identifier
word: lineCommentGot            	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: false                     	typecode: 27	identifier
word: blockCommentGot           	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: false                     	typecode: 27	identifier
word: stringGot                 	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: false                     	typecode: 27	identifier
word: ;                         	typecode: 48	semicolon
word: while                     	typecode: 5	key word
word: (                         	typecode: 49	leftbracket
word: i                         	typecode: 27	identifier
word: <                         	typecode: 42	less
word: len                       	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: {                         	typecode: 55	leftbrace
word: char                      	typecode: 17	key word
word: tmpch                     	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: input                     	typecode: 27	identifier
word: i                         	typecode: 27	identifier
word: ;                         	typecode: 48	semicolon
word: if                        	typecode: 3	key word
word: (                         	typecode: 49	leftbracket
word: lineCommentGot            	typecode: 27	identifier
word: blockCommentGot           	typecode: 27	identifier
word: stringGot                 	typecode: 27	identifier
word: spaceGot                  	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: tmpch                     	typecode: 27	identifier
word: ==                        	typecode: 41	equal
word: ' '                       	typecode: 54	character
word: tmpch                     	typecode: 27	identifier
word: ==                        	typecode: 41	equal
word: '\n'                      	typecode: 54	character
word: tmpch                     	typecode: 27	identifier
word: ==                        	typecode: 41	equal
word: '\t'                      	typecode: 54	character
word: tmpch                     	typecode: 27	identifier
word: ==                        	typecode: 41	equal
word: '\r'                      	typecode: 54	character
word: )                         	typecode: 50	rightbracket
word: )                         	typecode: 50	rightbracket
word: {                         	typecode: 55	leftbrace
word: spaceGot                  	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: true                      	typecode: 27	identifier
word: ;                         	typecode: 48	semicolon
word: output                    	typecode: 27	identifier
word: j                         	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: ' '                       	typecode: 54	character
word: ;                         	typecode: 48	semicolon
word: i                         	typecode: 27	identifier
word: ++                        	typecode: 32	addadd
word: ;                         	typecode: 48	semicolon
word: j                         	typecode: 27	identifier
word: ++                        	typecode: 32	addadd
word: ;                         	typecode: 48	semicolon
word: continue                  	typecode: 22	key word
word: ;                         	typecode: 48	semicolon
word: }                         	typecode: 56	rightbrace
word: if                        	typecode: 3	key word
word: (                         	typecode: 49	leftbracket
word: lineCommentGot            	typecode: 27	identifier
word: blockCommentGot           	typecode: 27	identifier
word: stringGot                 	typecode: 27	identifier
word: tmpch                     	typecode: 27	identifier
word: ==                        	typecode: 41	equal
word: '"'                       	typecode: 54	character
word: i                         	typecode: 27	identifier
word: -                         	typecode: 33	sub
word: 1                         	typecode: 28	integer
word: >                         	typecode: 45	greater
word: 0                         	typecode: 28	integer
word: input                     	typecode: 27	identifier
word: i                         	typecode: 27	identifier
word: -                         	typecode: 33	sub
word: 1                         	typecode: 28	integer
word: !=                        	typecode: 43	notequal
word: '\\'                      	typecode: 54	character
word: input                     	typecode: 27	identifier
word: i                         	typecode: 27	identifier
word: -                         	typecode: 33	sub
word: 1                         	typecode: 28	integer
word: !=                        	typecode: 43	notequal
word: '\''                      	typecode: 54	character
word: )                         	typecode: 50	rightbracket
word: {                         	typecode: 55	leftbrace
word: stringGot                 	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: true                      	typecode: 27	identifier
word: ;                         	typecode: 48	semicolon
word: spaceGot                  	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: false                     	typecode: 27	identifier
word: ;                         	typecode: 48	semicolon
word: output                    	typecode: 27	identifier
word: j                         	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: tmpch                     	typecode: 27	identifier
word: ;                         	typecode: 48	semicolon
word: j                         	typecode: 27	identifier
word: ++                        	typecode: 32	addadd
word: ;                         	typecode: 48	semicolon
word: i                         	typecode: 27	identifier
word: ++                        	typecode: 32	addadd
word: ;                         	typecode: 48	semicolon
word: continue                  	typecode: 22	key word
word: ;                         	typecode: 48	semicolon
word: }                         	typecode: 56	rightbrace
word: if                        	typecode: 3	key word
word: (                         	typecode: 49	leftbracket
word: blockCommentGot           	typecode: 27	identifier
word: stringGot                 	typecode: 27	identifier
word: tmpch                     	typecode: 27	identifier
word: ==                        	typecode: 41	equal
word: '/'                       	typecode: 54	character
word: i                         	typecode: 27	identifier
word: !=                        	typecode: 43	notequal
word: len                       	typecode: 27	identifier
word: -                         	typecode: 33	sub
word: 1                         	typecode: 28	integer
word: input                     	typecode: 27	identifier
word: i                         	typecode: 27	identifier
word: +                         	typecode: 30	add
word: 1                         	typecode: 28	integer
word: ==                        	typecode: 41	equal
word: '/'                       	typecode: 54	character
word: )                         	typecode: 50	rightbracket
word: {                         	typecode: 55	leftbrace
word: i                         	typecode: 27	identifier
word: +=                        	typecode: 31	addequal
word: 2                         	typecode: 28	integer
word: ;                         	typecode: 48	semicolon
word: lineCommentGot            	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: true                      	typecode: 27	identifier
word: ;                         	typecode: 48	semicolon
word: spaceGot                  	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: false                     	typecode: 27	identifier
word: ;                         	typecode: 48	semicolon
word: continue                  	typecode: 22	key word
word: ;                         	typecode: 48	semicolon
word: }                         	typecode: 56	rightbrace
word: if                        	typecode: 3	key word
word: (                         	typecode: 49	leftbracket
word: lineCommentGot            	typecode: 27	identifier
word: stringGot                 	typecode: 27	identifier
word: tmpch                     	typecode: 27	identifier
word: ==                        	typecode: 41	equal
word: '/'                       	typecode: 54	character
word: i                         	typecode: 27	identifier
word: !=                        	typecode: 43	notequal
word: len                       	typecode: 27	identifier
word: -                         	typecode: 33	sub
word: 1                         	typecode: 28	integer
word: input                     	typecode: 27	identifier
word: i                         	typecode: 27	identifier
word: +                         	typecode: 30	add
word: 1                         	typecode: 28	integer
word: ==                        	typecode: 41	equal
word: '*'                       	typecode: 54	character
word: )                         	typecode: 50	rightbracket
word: {                         	typecode: 55	leftbrace
word: i                         	typecode: 27	identifier
word: +=                        	typecode: 31	addequal
word: 2                         	typecode: 28	integer
word: ;                         	typecode: 48	semicolon
word: blockCommentGot           	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: true                      	typecode: 27	identifier
word: ;                         	typecode: 48	semicolon
word: spaceGot                  	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: false                     	typecode: 27	identifier
word: ;                         	typecode: 48	semicolon
word: continue                  	typecode: 22	key word
word: ;                         	typecode: 48	semicolon
word: }                         	typecode: 56	rightbrace
word: if                        	typecode: 3	key word
word: (                         	typecode: 49	leftbracket
word: lineCommentGot            	typecode: 27	identifier
word: blockCommentGot           	typecode: 27	identifier
word: stringGot                 	typecode: 27	identifier
word: spaceGot                  	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: tmpch                     	typecode: 27	identifier
word: ==                        	typecode: 41	equal
word: ' '                       	typecode: 54	character
word: tmpch                     	typecode: 27	identifier
word: ==                        	typecode: 41	equal
word: '\n'                      	typecode: 54	character
word: tmpch                     	typecode: 27	identifier
word: ==                        	typecode: 41	equal
word: '\t'                      	typecode: 54	character
word: tmpch                     	typecode: 27	identifier
word: ==                        	typecode: 41	equal
word: '\r'                      	typecode: 54	character
word: )                         	typecode: 50	rightbracket
word: )                         	typecode: 50	rightbracket
word: {                         	typecode: 55	leftbrace
word: i                         	typecode: 27	identifier
word: ++                        	typecode: 32	addadd
word: ;                         	typecode: 48	semicolon
word: continue                  	typecode: 22	key word
word: ;                         	typecode: 48	semicolon
word: }                         	typecode: 56	rightbrace
word: if                        	typecode: 3	key word
word: (                         	typecode: 49	leftbracket
word: blockCommentGot           	typecode: 27	identifier
word: stringGot                 	typecode: 27	identifier
word: lineCommentGot            	typecode: 27	identifier
word: tmpch                     	typecode: 27	identifier
word: !=                        	typecode: 43	notequal
word: '\n'                      	typecode: 54	character
word: )                         	typecode: 50	rightbracket
word: {                         	typecode: 55	leftbrace
word: i                         	typecode: 27	identifier
word: ++                        	typecode: 32	addadd
word: ;                         	typecode: 48	semicolon
word: continue                  	typecode: 22	key word
word: ;                         	typecode: 48	semicolon
word: }                         	typecode: 56	rightbrace
word: if                        	typecode: 3	key word
word: (                         	typecode: 49	leftbracket
word: lineCommentGot            	typecode: 27	identifier
word: stringGot                 	typecode: 27	identifier
word: blockCommentGot           	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: tmpch                     	typecode: 27	identifier
word: !=                        	typecode: 43	notequal
word: '*'                       	typecode: 54	character
word: (                         	typecode: 49	leftbracket
word: i                         	typecode: 27	identifier
word: !=                        	typecode: 43	notequal
word: len                       	typecode: 27	identifier
word: -                         	typecode: 33	sub
word: 1                         	typecode: 28	integer
word: input                     	typecode: 27	identifier
word: i                         	typecode: 27	identifier
word: +                         	typecode: 30	add
word: 1                         	typecode: 28	integer
word: !=                        	typecode: 43	notequal
word: '/'                       	typecode: 54	character
word: )                         	typecode: 50	rightbracket
word: )                         	typecode: 50	rightbracket
word: )                         	typecode: 50	rightbracket
word: {                         	typecode: 55	leftbrace
word: i                         	typecode: 27	identifier
word: ++                        	typecode: 32	addadd
word: ;                         	typecode: 48	semicolon
word: continue                  	typecode: 22	key word
word: ;                         	typecode: 48	semicolon
word: }                         	typecode: 56	rightbrace
word: if                        	typecode: 3	key word
word: (                         	typecode: 49	leftbracket
word: stringGot                 	typecode: 27	identifier
word: blockCommentGot           	typecode: 27	identifier
word: lineCommentGot            	typecode: 27	identifier
word: tmpch                     	typecode: 27	identifier
word: ==                        	typecode: 41	equal
word: '\n'                      	typecode: 54	character
word: )                         	typecode: 50	rightbracket
word: {                         	typecode: 55	leftbrace
word: i                         	typecode: 27	identifier
word: ++                        	typecode: 32	addadd
word: ;                         	typecode: 48	semicolon
word: lineCommentGot            	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: false                     	typecode: 27	identifier
word: ;                         	typecode: 48	semicolon
word: continue                  	typecode: 22	key word
word: ;                         	typecode: 48	semicolon
word: }                         	typecode: 56	rightbrace
word: if                        	typecode: 3	key word
word: (                         	typecode: 49	leftbracket
word: stringGot                 	typecode: 27	identifier
word: lineCommentGot            	typecode: 27	identifier
word: blockCommentGot           	typecode: 27	identifier
word: tmpch                     	typecode: 27	identifier
word: ==                        	typecode: 41	equal
word: '*'                       	typecode: 54	character
word: i                         	typecode: 27	identifier
word: !=                        	typecode: 43	notequal
word: len                       	typecode: 27	identifier
word: -                         	typecode: 33	sub
word: 1                         	typecode: 28	integer
word: input                     	typecode: 27	identifier
word: i                         	typecode: 27	identifier
word: +                         	typecode: 30	add
word: 1                         	typecode: 28	integer
word: ==                        	typecode: 41	equal
word: '/'                       	typecode: 54	character
word: )                         	typecode: 50	rightbracket
word: {                         	typecode: 55	leftbrace
word: blockCommentGot           	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: false                     	typecode: 27	identifier
word: ;                         	typecode: 48	semicolon
word: i                         	typecode: 27	identifier
word: +=                        	typecode: 31	addequal
word: 2                         	typecode: 28	integer
word: ;                         	typecode: 48	semicolon
word: continue                  	typecode: 22	key word
word: ;                         	typecode: 48	semicolon
word: }                         	typecode: 56	rightbrace
word: if                        	typecode: 3	key word
word: (                         	typecode: 49	leftbracket
word: lineCommentGot            	typecode: 27	identifier
word: blockCommentGot           	typecode: 27	identifier
word: stringGot                 	typecode: 27	identifier
word: tmpch                     	typecode: 27	identifier
word: ==                        	typecode: 41	equal
word: '"'                       	typecode: 54	character
word: i                         	typecode: 27	identifier
word: -                         	typecode: 33	sub
word: 1                         	typecode: 28	integer
word: >                         	typecode: 45	greater
word: 0                         	typecode: 28	integer
word: input                     	typecode: 27	identifier
word: i                         	typecode: 27	identifier
word: -                         	typecode: 33	sub
word: 1                         	typecode: 28	integer
word: !=                        	typecode: 43	notequal
word: '\\'                      	typecode: 54	character
word: input                     	typecode: 27	identifier
word: i                         	typecode: 27	identifier
word: -                         	typecode: 33	sub
word: 1                         	typecode: 28	integer
word: !=                        	typecode: 43	notequal
word: '\''                      	typecode: 54	character
word: )                         	typecode: 50	rightbracket
word: {                         	typecode: 55	leftbrace
word: stringGot                 	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: false                     	typecode: 27	identifier
word: ;                         	typecode: 48	semicolon
word: output                    	typecode: 27	identifier
word: j                         	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: tmpch                     	typecode: 27	identifier
word: ;                         	typecode: 48	semicolon
word: j                         	typecode: 27	identifier
word: ++                        	typecode: 32	addadd
word: ;                         	typecode: 48	semicolon
word: i                         	typecode: 27	identifier
word: ++                        	typecode: 32	addadd
word: ;                         	typecode: 48	semicolon
word: continue                  	typecode: 22	key word
word: ;                         	typecode: 48	semicolon
word: }                         	typecode: 56	rightbrace
word: output                    	typecode: 27	identifier
word: j                         	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: input                     	typecode: 27	identifier
word: i                         	typecode: 27	identifier
word: ;                         	typecode: 48	semicolon
word: i                         	typecode: 27	identifier
word: ++                        	typecode: 32	addadd
word: ;                         	typecode: 48	semicolon
word: j                         	typecode: 27	identifier
word: ++                        	typecode: 32	addadd
word: ;                         	typecode: 48	semicolon
word: spaceGot                  	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: blockCommentGot           	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: lineCommentGot            	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: false                     	typecode: 27	identifier
word: ;                         	typecode: 48	semicolon
word: }                         	typecode: 56	rightbrace
word: output                    	typecode: 27	identifier
word: j                         	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: 0                         	typecode: 28	integer
word: ;                         	typecode: 48	semicolon
word: }                         	typecode: 56	rightbrace
word: bool                      	typecode: 27	identifier
word: islower                   	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: char                      	typecode: 17	key word
word: ch                        	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: {                         	typecode: 55	leftbrace
word: return                    	typecode: 18	key word
word: ch                        	typecode: 27	identifier
word: >=                        	typecode: 46	greaterequal
word: 'a'                       	typecode: 54	character
word: ch                        	typecode: 27	identifier
word: <=                        	typecode: 44	lessequal
word: 'z'                       	typecode: 54	character
word: ;                         	typecode: 48	semicolon
word: }                         	typecode: 56	rightbrace
word: bool                      	typecode: 27	identifier
word: isupper                   	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: char                      	typecode: 17	key word
word: ch                        	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: {                         	typecode: 55	leftbrace
word: return                    	typecode: 18	key word
word: ch                        	typecode: 27	identifier
word: >=                        	typecode: 46	greaterequal
word: 'A'                       	typecode: 54	character
word: ch                        	typecode: 27	identifier
word: <=                        	typecode: 44	lessequal
word: 'Z'                       	typecode: 54	character
word: ;                         	typecode: 48	semicolon
word: }                         	typecode: 56	rightbrace
word: bool                      	typecode: 27	identifier
word: isdigit                   	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: char                      	typecode: 17	key word
word: ch                        	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: {                         	typecode: 55	leftbrace
word: return                    	typecode: 18	key word
word: ch                        	typecode: 27	identifier
word: >=                        	typecode: 46	greaterequal
word: '0'                       	typecode: 54	character
word: ch                        	typecode: 27	identifier
word: <=                        	typecode: 44	lessequal
word: '9'                       	typecode: 54	character
word: ;                         	typecode: 48	semicolon
word: }                         	typecode: 56	rightbrace
word: void                      	typecode: 24	key word
word: errorExit                 	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: )                         	typecode: 50	rightbracket
word: {                         	typecode: 55	leftbrace
word: printf                    	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: "Error"                   	typecode: 53	string
word: )                         	typecode: 50	rightbracket
word: ;                         	typecode: 48	semicolon
word: exit                      	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: 0                         	typecode: 28	integer
word: )                         	typecode: 50	rightbracket
word: ;                         	typecode: 48	semicolon
word: }                         	typecode: 56	rightbrace
word: int                       	typecode: 8	key word
word: wordParse                 	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: char                      	typecode: 17	key word
word: *                         	typecode: 36	multiple
word: input                     	typecode: 27	identifier
word: wordTuple                 	typecode: 27	identifier
word: *                         	typecode: 36	multiple
word: output                    	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: {                         	typecode: 55	leftbrace
word: int                       	typecode: 8	key word
word: len                       	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: strlen                    	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: input                     	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: j                         	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: 0                         	typecode: 28	integer
word: i                         	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: 0                         	typecode: 28	integer
word: ;                         	typecode: 48	semicolon
word: while                     	typecode: 5	key word
word: (                         	typecode: 49	leftbracket
word: i                         	typecode: 27	identifier
word: <                         	typecode: 42	less
word: len                       	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: {                         	typecode: 55	leftbrace
word: char                      	typecode: 17	key word
word: ch                        	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: input                     	typecode: 27	identifier
word: i                         	typecode: 27	identifier
word: ;                         	typecode: 48	semicolon
word: if                        	typecode: 3	key word
word: (                         	typecode: 49	leftbracket
word: islower                   	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: ch                        	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: isupper                   	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: ch                        	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: ch                        	typecode: 27	identifier
word: ==                        	typecode: 41	equal
word: '_'                       	typecode: 54	character
word: )                         	typecode: 50	rightbracket
word: {                         	typecode: 55	leftbrace
word: int                       	typecode: 8	key word
word: k                         	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: i                         	typecode: 27	identifier
word: ;                         	typecode: 48	semicolon
word: char                      	typecode: 17	key word
word: tmpch                     	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: input                     	typecode: 27	identifier
word: k                         	typecode: 27	identifier
word: ;                         	typecode: 48	semicolon
word: while                     	typecode: 5	key word
word: (                         	typecode: 49	leftbracket
word: islower                   	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: tmpch                     	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: isupper                   	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: tmpch                     	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: isdigit                   	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: tmpch                     	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: tmpch                     	typecode: 27	identifier
word: ==                        	typecode: 41	equal
word: '_'                       	typecode: 54	character
word: )                         	typecode: 50	rightbracket
word: {                         	typecode: 55	leftbrace
word: tmpch                     	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: input                     	typecode: 27	identifier
word: ++                        	typecode: 32	addadd
word: k                         	typecode: 27	identifier
word: ;                         	typecode: 48	semicolon
word: }                         	typecode: 56	rightbrace
word: output                    	typecode: 27	identifier
word: j                         	typecode: 27	identifier
word: ++                        	typecode: 32	addadd
word: setWrod                   	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: input                     	typecode: 27	identifier
word: +                         	typecode: 30	add
word: i                         	typecode: 27	identifier
word: k                         	typecode: 27	identifier
word: -                         	typecode: 33	sub
word: i                         	typecode: 27	identifier
word: IDv                       	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: ;                         	typecode: 48	semicolon
word: i                         	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: k                         	typecode: 27	identifier
word: ;                         	typecode: 48	semicolon
word: continue                  	typecode: 22	key word
word: ;                         	typecode: 48	semicolon
word: }                         	typecode: 56	rightbrace
word: if                        	typecode: 3	key word
word: (                         	typecode: 49	leftbracket
word: isdigit                   	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: ch                        	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: )                         	typecode: 50	rightbracket
word: {                         	typecode: 55	leftbrace
word: int                       	typecode: 8	key word
word: k                         	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: i                         	typecode: 27	identifier
word: ;                         	typecode: 48	semicolon
word: char                      	typecode: 17	key word
word: tmpch                     	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: input                     	typecode: 27	identifier
word: k                         	typecode: 27	identifier
word: ;                         	typecode: 48	semicolon
word: while                     	typecode: 5	key word
word: (                         	typecode: 49	leftbracket
word: isdigit                   	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: tmpch                     	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: )                         	typecode: 50	rightbracket
word: {                         	typecode: 55	leftbrace
word: tmpch                     	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: input                     	typecode: 27	identifier
word: ++                        	typecode: 32	addadd
word: k                         	typecode: 27	identifier
word: ;                         	typecode: 48	semicolon
word: }                         	typecode: 56	rightbrace
word: if                        	typecode: 3	key word
word: (                         	typecode: 49	leftbracket
word: tmpch                     	typecode: 27	identifier
word: ==                        	typecode: 41	equal
word: '.'                       	typecode: 54	character
word: )                         	typecode: 50	rightbracket
word: {                         	typecode: 55	leftbrace
word: tmpch                     	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: input                     	typecode: 27	identifier
word: ++                        	typecode: 32	addadd
word: k                         	typecode: 27	identifier
word: ;                         	typecode: 48	semicolon
word: while                     	typecode: 5	key word
word: (                         	typecode: 49	leftbracket
word: isdigit                   	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: tmpch                     	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: )                         	typecode: 50	rightbracket
word: {                         	typecode: 55	leftbrace
word: tmpch                     	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: input                     	typecode: 27	identifier
word: ++                        	typecode: 32	addadd
word: k                         	typecode: 27	identifier
word: ;                         	typecode: 48	semicolon
word: }                         	typecode: 56	rightbrace
word: if                        	typecode: 3	key word
word: (                         	typecode: 49	leftbracket
word: tmpch                     	typecode: 27	identifier
word: ==                        	typecode: 41	equal
word: 'e'                       	typecode: 54	character
word: tmpch                     	typecode: 27	identifier
word: ==                        	typecode: 41	equal
word: 'E'                       	typecode: 54	character
word: )                         	typecode: 50	rightbracket
word: {                         	typecode: 55	leftbrace
word: tmpch                     	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: input                     	typecode: 27	identifier
word: ++                        	typecode: 32	addadd
word: k                         	typecode: 27	identifier
word: ;                         	typecode: 48	semicolon
word: if                        	typecode: 3	key word
word: (                         	typecode: 49	leftbracket
word: isdigit                   	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: tmpch                     	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: )                         	typecode: 50	rightbracket
word: {                         	typecode: 55	leftbrace
word: while                     	typecode: 5	key word
word: (                         	typecode: 49	leftbracket
word: isdigit                   	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: tmpch                     	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: )                         	typecode: 50	rightbracket
word: {                         	typecode: 55	leftbrace
word: tmpch                     	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: input                     	typecode: 27	identifier
word: ++                        	typecode: 32	addadd
word: k                         	typecode: 27	identifier
word: ;                         	typecode: 48	semicolon
word: }                         	typecode: 56	rightbrace
word: output                    	typecode: 27	identifier
word: j                         	typecode: 27	identifier
word: ++                        	typecode: 32	addadd
word: setWrod                   	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: input                     	typecode: 27	identifier
word: +                         	typecode: 30	add
word: i                         	typecode: 27	identifier
word: k                         	typecode: 27	identifier
word: -                         	typecode: 33	sub
word: i                         	typecode: 27	identifier
word: realv                     	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: ;                         	typecode: 48	semicolon
word: i                         	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: k                         	typecode: 27	identifier
word: ;                         	typecode: 48	semicolon
word: continue                  	typecode: 22	key word
word: ;                         	typecode: 48	semicolon
word: }                         	typecode: 56	rightbrace
word: else                      	typecode: 12	key word
word: {                         	typecode: 55	leftbrace
word: errorExit                 	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: )                         	typecode: 50	rightbracket
word: ;                         	typecode: 48	semicolon
word: }                         	typecode: 56	rightbrace
word: }                         	typecode: 56	rightbrace
word: else                      	typecode: 12	key word
word: {                         	typecode: 55	leftbrace
word: output                    	typecode: 27	identifier
word: j                         	typecode: 27	identifier
word: ++                        	typecode: 32	addadd
word: setWrod                   	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: input                     	typecode: 27	identifier
word: +                         	typecode: 30	add
word: i                         	typecode: 27	identifier
word: k                         	typecode: 27	identifier
word: -                         	typecode: 33	sub
word: i                         	typecode: 27	identifier
word: realv                     	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: ;                         	typecode: 48	semicolon
word: i                         	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: k                         	typecode: 27	identifier
word: ;                         	typecode: 48	semicolon
word: continue                  	typecode: 22	key word
word: ;                         	typecode: 48	semicolon
word: }                         	typecode: 56	rightbrace
word: }                         	typecode: 56	rightbrace
word: else                      	typecode: 12	key word
word: if                        	typecode: 3	key word
word: (                         	typecode: 49	leftbracket
word: tmpch                     	typecode: 27	identifier
word: ==                        	typecode: 41	equal
word: 'e'                       	typecode: 54	character
word: tmpch                     	typecode: 27	identifier
word: ==                        	typecode: 41	equal
word: 'E'                       	typecode: 54	character
word: )                         	typecode: 50	rightbracket
word: {                         	typecode: 55	leftbrace
word: tmpch                     	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: input                     	typecode: 27	identifier
word: ++                        	typecode: 32	addadd
word: k                         	typecode: 27	identifier
word: ;                         	typecode: 48	semicolon
word: if                        	typecode: 3	key word
word: (                         	typecode: 49	leftbracket
word: isdigit                   	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: tmpch                     	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: )                         	typecode: 50	rightbracket
word: {                         	typecode: 55	leftbrace
word: while                     	typecode: 5	key word
word: (                         	typecode: 49	leftbracket
word: isdigit                   	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: tmpch                     	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: )                         	typecode: 50	rightbracket
word: {                         	typecode: 55	leftbrace
word: tmpch                     	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: input                     	typecode: 27	identifier
word: ++                        	typecode: 32	addadd
word: k                         	typecode: 27	identifier
word: ;                         	typecode: 48	semicolon
word: }                         	typecode: 56	rightbrace
word: output                    	typecode: 27	identifier
word: j                         	typecode: 27	identifier
word: ++                        	typecode: 32	addadd
word: setWrod                   	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: input                     	typecode: 27	identifier
word: +                         	typecode: 30	add
word: i                         	typecode: 27	identifier
word: k                         	typecode: 27	identifier
word: -                         	typecode: 33	sub
word: i                         	typecode: 27	identifier
word: realev                    	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: ;                         	typecode: 48	semicolon
word: i                         	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: k                         	typecode: 27	identifier
word: ;                         	typecode: 48	semicolon
word: continue                  	typecode: 22	key word
word: ;                         	typecode: 48	semicolon
word: }                         	typecode: 56	rightbrace
word: else                      	typecode: 12	key word
word: {                         	typecode: 55	leftbrace
word: errorExit                 	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: )                         	typecode: 50	rightbracket
word: ;                         	typecode: 48	semicolon
word: }                         	typecode: 56	rightbrace
word: }                         	typecode: 56	rightbrace
word: else                      	typecode: 12	key word
word: {                         	typecode: 55	leftbrace
word: output                    	typecode: 27	identifier
word: j                         	typecode: 27	identifier
word: ++                        	typecode: 32	addadd
word: setWrod                   	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: input                     	typecode: 27	identifier
word: +                         	typecode: 30	add
word: i                         	typecode: 27	identifier
word: k                         	typecode: 27	identifier
word: -                         	typecode: 33	sub
word: i                         	typecode: 27	identifier
word: integerv                  	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: ;                         	typecode: 48	semicolon
word: i                         	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: k                         	typecode: 27	identifier
word: ;                         	typecode: 48	semicolon
word: continue                  	typecode: 22	key word
word: ;                         	typecode: 48	semicolon
word: }                         	typecode: 56	rightbrace
word: }                         	typecode: 56	rightbrace
word: if                        	typecode: 3	key word
word: (                         	typecode: 49	leftbracket
word: ch                        	typecode: 27	identifier
word: ==                        	typecode: 41	equal
word: '\''                      	typecode: 54	character
word: )                         	typecode: 50	rightbracket
word: {                         	typecode: 55	leftbrace
word: if                        	typecode: 3	key word
word: (                         	typecode: 49	leftbracket
word: i                         	typecode: 27	identifier
word: +                         	typecode: 30	add
word: 1                         	typecode: 28	integer
word: <                         	typecode: 42	less
word: len                       	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: {                         	typecode: 55	leftbrace
word: char                      	typecode: 17	key word
word: tmpch                     	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: input                     	typecode: 27	identifier
word: i                         	typecode: 27	identifier
word: +                         	typecode: 30	add
word: 1                         	typecode: 28	integer
word: ;                         	typecode: 48	semicolon
word: if                        	typecode: 3	key word
word: (                         	typecode: 49	leftbracket
word: tmpch                     	typecode: 27	identifier
word: ==                        	typecode: 41	equal
word: '\\'                      	typecode: 54	character
word: +                         	typecode: 30	add
word: 3                         	typecode: 28	integer
word: <                         	typecode: 42	less
word: len                       	typecode: 27	identifier
word: input                     	typecode: 27	identifier
word: i                         	typecode: 27	identifier
word: +                         	typecode: 30	add
word: 3                         	typecode: 28	integer
word: ==                        	typecode: 41	equal
word: '\''                      	typecode: 54	character
word: )                         	typecode: 50	rightbracket
word: {                         	typecode: 55	leftbrace
word: output                    	typecode: 27	identifier
word: j                         	typecode: 27	identifier
word: ++                        	typecode: 32	addadd
word: setWrod                   	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: input                     	typecode: 27	identifier
word: +                         	typecode: 30	add
word: i                         	typecode: 27	identifier
word: +                         	typecode: 30	add
word: 1                         	typecode: 28	integer
word: 2                         	typecode: 28	integer
word: characterv                	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: ;                         	typecode: 48	semicolon
word: i                         	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: i                         	typecode: 27	identifier
word: +                         	typecode: 30	add
word: 4                         	typecode: 28	integer
word: ;                         	typecode: 48	semicolon
word: continue                  	typecode: 22	key word
word: ;                         	typecode: 48	semicolon
word: }                         	typecode: 56	rightbrace
word: else                      	typecode: 12	key word
word: if                        	typecode: 3	key word
word: (                         	typecode: 49	leftbracket
word: tmpch                     	typecode: 27	identifier
word: >=                        	typecode: 46	greaterequal
word: 20                        	typecode: 28	integer
word: tmpch                     	typecode: 27	identifier
word: <=                        	typecode: 44	lessequal
word: 126                       	typecode: 28	integer
word: input                     	typecode: 27	identifier
word: i                         	typecode: 27	identifier
word: +                         	typecode: 30	add
word: 2                         	typecode: 28	integer
word: ==                        	typecode: 41	equal
word: '\''                      	typecode: 54	character
word: )                         	typecode: 50	rightbracket
word: {                         	typecode: 55	leftbrace
word: output                    	typecode: 27	identifier
word: j                         	typecode: 27	identifier
word: ++                        	typecode: 32	addadd
word: setWrod                   	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: input                     	typecode: 27	identifier
word: +                         	typecode: 30	add
word: i                         	typecode: 27	identifier
word: +                         	typecode: 30	add
word: 1                         	typecode: 28	integer
word: 1                         	typecode: 28	integer
word: characterv                	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: ;                         	typecode: 48	semicolon
word: i                         	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: i                         	typecode: 27	identifier
word: +                         	typecode: 30	add
word: 3                         	typecode: 28	integer
word: ;                         	typecode: 48	semicolon
word: continue                  	typecode: 22	key word
word: ;                         	typecode: 48	semicolon
word: }                         	typecode: 56	rightbrace
word: else                      	typecode: 12	key word
word: {                         	typecode: 55	leftbrace
word: errorExit                 	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: )                         	typecode: 50	rightbracket
word: ;                         	typecode: 48	semicolon
word: }                         	typecode: 56	rightbrace
word: }                         	typecode: 56	rightbrace
word: else                      	typecode: 12	key word
word: {                         	typecode: 55	leftbrace
word: errorExit                 	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: )                         	typecode: 50	rightbracket
word: ;                         	typecode: 48	semicolon
word: }                         	typecode: 56	rightbrace
word: }                         	typecode: 56	rightbrace
word: if                        	typecode: 3	key word
word: (                         	typecode: 49	leftbracket
word: ch                        	typecode: 27	identifier
word: ==                        	typecode: 41	equal
word: '"'                       	typecode: 54	character
word: )                         	typecode: 50	rightbracket
word: {                         	typecode: 55	leftbrace
word: }                         	typecode: 56	rightbrace
word: if                        	typecode: 3	key word
word: (                         	typecode: 49	leftbracket
word: ch                        	typecode: 27	identifier
word: ==                        	typecode: 41	equal
word: '#'                       	typecode: 54	character
word: )                         	typecode: 50	rightbracket
word: {                         	typecode: 55	leftbrace
word: if                        	typecode: 3	key word
word: (                         	typecode: 49	leftbracket
word: i                         	typecode: 27	identifier
word: +                         	typecode: 30	add
word: 7                         	typecode: 28	integer
word: <                         	typecode: 42	less
word: len                       	typecode: 27	identifier
word: strncmp                   	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: input                     	typecode: 27	identifier
word: +                         	typecode: 30	add
word: i                         	typecode: 27	identifier
word: codeToStr                 	typecode: 27	identifier
word: 0                         	typecode: 28	integer
word: 8                         	typecode: 28	integer
word: )                         	typecode: 50	rightbracket
word: ==                        	typecode: 41	equal
word: 0                         	typecode: 28	integer
word: )                         	typecode: 50	rightbracket
word: {                         	typecode: 55	leftbrace
word: output                    	typecode: 27	identifier
word: j                         	typecode: 27	identifier
word: ++                        	typecode: 32	addadd
word: setWrod                   	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: input                     	typecode: 27	identifier
word: +                         	typecode: 30	add
word: i                         	typecode: 27	identifier
word: 8                         	typecode: 28	integer
word: includev                  	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: ;                         	typecode: 48	semicolon
word: i                         	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: i                         	typecode: 27	identifier
word: +                         	typecode: 30	add
word: 8                         	typecode: 28	integer
word: ;                         	typecode: 48	semicolon
word: }                         	typecode: 56	rightbrace
word: else                      	typecode: 12	key word
word: if                        	typecode: 3	key word
word: (                         	typecode: 49	leftbracket
word: i                         	typecode: 27	identifier
word: +                         	typecode: 30	add
word: 6                         	typecode: 28	integer
word: <                         	typecode: 42	less
word: len                       	typecode: 27	identifier
word: strncmp                   	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: input                     	typecode: 27	identifier
word: +                         	typecode: 30	add
word: i                         	typecode: 27	identifier
word: codeToStr                 	typecode: 27	identifier
word: 1                         	typecode: 28	integer
word: 7                         	typecode: 28	integer
word: )                         	typecode: 50	rightbracket
word: ==                        	typecode: 41	equal
word: 0                         	typecode: 28	integer
word: )                         	typecode: 50	rightbracket
word: {                         	typecode: 55	leftbrace
word: output                    	typecode: 27	identifier
word: j                         	typecode: 27	identifier
word: ++                        	typecode: 32	addadd
word: setWrod                   	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: input                     	typecode: 27	identifier
word: +                         	typecode: 30	add
word: i                         	typecode: 27	identifier
word: 7                         	typecode: 28	integer
word: definev                   	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: ;                         	typecode: 48	semicolon
word: i                         	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: i                         	typecode: 27	identifier
word: +                         	typecode: 30	add
word: 7                         	typecode: 28	integer
word: ;                         	typecode: 48	semicolon
word: }                         	typecode: 56	rightbrace
word: else                      	typecode: 12	key word
word: {                         	typecode: 55	leftbrace
word: errorExit                 	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: )                         	typecode: 50	rightbracket
word: ;                         	typecode: 48	semicolon
word: }                         	typecode: 56	rightbrace
word: }                         	typecode: 56	rightbrace
word: i                         	typecode: 27	identifier
word: ++                        	typecode: 32	addadd
word: ;                         	typecode: 48	semicolon
word: }                         	typecode: 56	rightbrace
word: return                    	typecode: 18	key word
word: j                         	typecode: 27	identifier
word: ;                         	typecode: 48	semicolon
word: }                         	typecode: 56	rightbrace
word: int                       	typecode: 8	key word
word: main                      	typecode: 2	key word
word: (                         	typecode: 49	leftbracket
word: )                         	typecode: 50	rightbracket
word: {                         	typecode: 55	leftbrace
word: freopen                   	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: "data.out"                	typecode: 53	string
word: "w+"                      	typecode: 53	string
word: stdout                    	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: ;                         	typecode: 48	semicolon
word: freopen                   	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: "data.in"                 	typecode: 53	string
word: "r"                       	typecode: 53	string
word: stdin                     	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: ;                         	typecode: 48	semicolon
word: char                      	typecode: 17	key word
word: *                         	typecode: 36	multiple
word: sourceCodeInput           	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: (                         	typecode: 49	leftbracket
word: char                      	typecode: 17	key word
word: *                         	typecode: 36	multiple
word: )                         	typecode: 50	rightbracket
word: malloc                    	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: maxn                      	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: ;                         	typecode: 48	semicolon
word: char                      	typecode: 17	key word
word: *                         	typecode: 36	multiple
word: preprocessOutput          	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: (                         	typecode: 49	leftbracket
word: char                      	typecode: 17	key word
word: *                         	typecode: 36	multiple
word: )                         	typecode: 50	rightbracket
word: malloc                    	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: maxn                      	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: ;                         	typecode: 48	semicolon
word: memset                    	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: preprocessOutput          	typecode: 27	identifier
word: 0                         	typecode: 28	integer
word: maxn                      	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: ;                         	typecode: 48	semicolon
word: memset                    	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: sourceCodeInput           	typecode: 27	identifier
word: 0                         	typecode: 28	integer
word: maxn                      	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: ;                         	typecode: 48	semicolon
word: for                       	typecode: 23	key word
word: (                         	typecode: 49	leftbracket
word: int                       	typecode: 8	key word
word: i                         	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: 0                         	typecode: 28	integer
word: ;                         	typecode: 48	semicolon
word: scanf                     	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: "%c"                      	typecode: 53	string
word: sourceCodeInput           	typecode: 27	identifier
word: +                         	typecode: 30	add
word: i                         	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: !=                        	typecode: 43	notequal
word: EOF                       	typecode: 27	identifier
word: ;                         	typecode: 48	semicolon
word: i                         	typecode: 27	identifier
word: ++                        	typecode: 32	addadd
word: )                         	typecode: 50	rightbracket
word: ;                         	typecode: 48	semicolon
word: preprocess                	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: sourceCodeInput           	typecode: 27	identifier
word: preprocessOutput          	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: ;                         	typecode: 48	semicolon
word: for                       	typecode: 23	key word
word: (                         	typecode: 49	leftbracket
word: int                       	typecode: 8	key word
word: i                         	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: 0                         	typecode: 28	integer
word: ;                         	typecode: 48	semicolon
word: i                         	typecode: 27	identifier
word: <                         	typecode: 42	less
word: (                         	typecode: 49	leftbracket
word: int                       	typecode: 8	key word
word: )                         	typecode: 50	rightbracket
word: strlen                    	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: preprocessOutput          	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: ;                         	typecode: 48	semicolon
word: i                         	typecode: 27	identifier
word: ++                        	typecode: 32	addadd
word: )                         	typecode: 50	rightbracket
word: {                         	typecode: 55	leftbrace
word: printf                    	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: "%c"                      	typecode: 53	string
word: preprocessOutput          	typecode: 27	identifier
word: i                         	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: ;                         	typecode: 48	semicolon
word: }                         	typecode: 56	rightbrace
word: puts                      	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: ""                        	typecode: 53	string
word: )                         	typecode: 50	rightbracket
word: ;                         	typecode: 48	semicolon
word: wordTuple                 	typecode: 27	identifier
word: *                         	typecode: 36	multiple
word: wordParseOutput           	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: (                         	typecode: 49	leftbracket
word: wordTuple                 	typecode: 27	identifier
word: *                         	typecode: 36	multiple
word: )                         	typecode: 50	rightbracket
word: malloc                    	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: sizeof                    	typecode: 25	key word
word: (                         	typecode: 49	leftbracket
word: wordTuple                 	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: *                         	typecode: 36	multiple
word: maxn                      	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: ;                         	typecode: 48	semicolon
word: int                       	typecode: 8	key word
word: wordsLen                  	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: wordParse                 	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: preprocessOutput          	typecode: 27	identifier
word: wordParseOutput           	typecode: 27	identifier
word: )                         	typecode: 50	rightbracket
word: ;                         	typecode: 48	semicolon
word: for                       	typecode: 23	key word
word: (                         	typecode: 49	leftbracket
word: int                       	typecode: 8	key word
word: i                         	typecode: 27	identifier
word: =                         	typecode: 47	assign$
word: 0                         	typecode: 28	integer
word: ;                         	typecode: 48	semicolon
word: i                         	typecode: 27	identifier
word: <                         	typecode: 42	less
word: wordsLen                  	typecode: 27	identifier
word: ;                         	typecode: 48	semicolon
word: i                         	typecode: 27	identifier
word: ++                        	typecode: 32	addadd
word: )                         	typecode: 50	rightbracket
word: {                         	typecode: 55	leftbrace
word: wordParseOutput           	typecode: 27	identifier
word: i                         	typecode: 27	identifier
word: printWord                 	typecode: 27	identifier
word: (                         	typecode: 49	leftbracket
word: )                         	typecode: 50	rightbracket
word: ;                         	typecode: 48	semicolon
word: }                         	typecode: 56	rightbrace
word: int                       	typecode: 8	key word
word: lsdg                      	typecode: 27	identifier
word: ;                         	typecode: 48	semicolon
word: double                    	typecode: 9	key word
word: elg                       	typecode: 27	identifier
word: ;                         	typecode: 48	semicolon
word: return                    	typecode: 18	key word
word: 0                         	typecode: 28	integer
word: ;                         	typecode: 48	semicolon
word: }                         	typecode: 56	rightbrace
