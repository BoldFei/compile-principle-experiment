#define _CRT_SECURE_NO_WARNINGS   #define includev$ 0 #define definev$ 1 #define mainv$ 2 #define ifv$ 3 #define thenv$ 4 #define whilev$ 5 #define dov$ 6 #define staticv$ 7 #define intv$ 8 #define doublev$ 9 #define structv$ 10 #define breakv$ 11 #define elsev$ 12 #define longv$ 13 #define switchv$ 14 #define casev$ 15 #define typedefv$ 16 #define charv$ 17 #define returnv$ 18 #define constv$ 19 #define floatv$ 20 #define shortv$ 21 #define continuev$ 22 #define forv$ 23 #define voidv$ 24 #define sizeofv$ 25 #define defaultv$ 26 #define IDv$ 27 #define integerv$ 28 #define realv$ 29 #define addv$ 30 #define addequalv$ 31 #define addaddv$ 32 #define subv$ 33 #define subsubv$ 34 #define subequalv$ 35 #define multiplev$ 36 #define multipleequalv$ 37 #define dividev$ 38 #define divideequalv$ 39 #define colonv$ 40 #define equalv$ 41 #define lessv$ 42 #define notequalv$ 43 #define lessequalv$ 44 #define greaterv$ 45 #define greaterequalv$ 46 #define assign$ 47 #define semicolonv$ 48 #define leftbracketv$ 49 #define rightbracketv$ 50 #define realev$ 51 #define undefinedv$ 52 #define stringv$ 53 #define characterv$ 54  #include <cstdio> #include <cstdlib> #include <algorithm> #include <cstring> #include <cmath> #include <Windows.h> using namespace std;  const int maxn = 1e5 + 5; const char *codeToStr[] = {"#include","#define", "main", "if", "then", "while", "do", "static", "int", "double", "struct", "break", "else", "long", "switch", "case", "typedef", "char", "return", "const", "float", "short", "continue", "for", "void", "sizeof", "default", "identifier", "integer", "real", "add", "addequal", "addadd", "sub", "subsub", "subequal", "multiple", "multipleequal", "divide", "divideequal", "colon", "equal", "less", "notequal", "lessequal", "greater", "greaterequal", "assign$", "semicolon", "leftbracket", "rightbracket", "reale", "undefined", "string", "character"};  struct wordTuple { char *word; int len; int typeCode; void setWrod(char *source, int sz, int tc) { len = sz + 3; word = (char *)malloc(len); memset(word, 0, sizeof(word)); strncpy(word, source, sz); word[sz] = 0; typeCode = tc; }  void printWord() { getTypeCode(); printf("word: %s", word); for (int i = 0; i < 26 - len; i++) printf(" "); printf("\t typeCode: %3d\t", typeCode); if (typeCode == integerv$) puts("整数"); else if (typeCode == realv$) puts("实数"); else if (typeCode == realev$) puts("科学计数法"); else if (typeCode == IDv$) puts("标识符"); else if (typeCode == characterv$) puts("字符"); else if (typeCode == stringv$) puts("字符串"); else puts(""); }  void getTypeCode() { if (typeCode == IDv$) { for (int i = 2; i <= 26; i++) { if (strcmp(word, codeToStr[i]) == 0) { typeCode = i; break; } } } } };  void preprocess(char *input, char *output) { int len = strlen(input); int i = 0, j = 0; bool spaceGot = false, lineCommentGot = false, blockCommentGot = false, stringGot = false; while (i < len) { char tmpch = input[i];  if (!lineCommentGot && !blockCommentGot && !stringGot && !spaceGot && (tmpch == ' ' || tmpch == '\n' || tmpch == '\t' || tmpch == '\r')) { spaceGot = true; output[j] = ' '; i++; j++; continue; }  if (!lineCommentGot && !blockCommentGot && !stringGot && tmpch == '"' && i - 1 > 0 && input[i - 1] != '\\' && input[i - 1] != '\'') { stringGot = true; spaceGot = false; output[j] = tmpch; j++; i++; continue; }  if (!blockCommentGot && !stringGot && tmpch == '/' && i != len - 1 && input[i + 1] == '/') { i += 2; lineCommentGot = true; spaceGot = false; continue; }  if (!lineCommentGot && !stringGot && tmpch == '/' && i != len - 1 && input[i + 1] == '*') { i += 2; blockCommentGot = true; spaceGot = false; continue; }  if (!lineCommentGot && !blockCommentGot && !stringGot && spaceGot && (tmpch == ' ' || tmpch == '\n' || tmpch == '\t' || tmpch == '\r')) { i++; continue; }  if (!blockCommentGot && !stringGot && lineCommentGot && tmpch != '\n') { i++; continue; }  if (!lineCommentGot && !stringGot && blockCommentGot && (tmpch != '*' || (i != len - 1 && input[i + 1] != '/'))) { i++; continue; }  if (!stringGot && !blockCommentGot && lineCommentGot && tmpch == '\n') { i++; lineCommentGot = false; continue; }  if (!stringGot && !lineCommentGot && blockCommentGot && tmpch == '*' && i != len - 1 && input[i + 1] == '/') { blockCommentGot = false; i += 2; continue; }  if (!lineCommentGot && !blockCommentGot && stringGot && tmpch == '"' && i - 1 > 0 && input[i - 1] != '\\' && input[i - 1] != '\'') { stringGot = false; output[j] = tmpch; j++; i++; continue; }  output[j] = input[i]; i++; j++; spaceGot = blockCommentGot = lineCommentGot = false; } output[j] = 0; }  bool islower(char ch) { return ch >= 'a' && ch <= 'z'; }  bool isupper(char ch) { return ch >= 'A' && ch <= 'Z'; }  bool isdigit(char ch) { return ch >= '0' && ch <= '9'; }  void errorExit() { printf("Error"); exit(0); }  int wordParse(char *input, wordTuple *output) { int len = strlen(input), j = 0, i = 0; while (i < len) { char ch = input[i];  if (islower(ch) || isupper(ch) || ch == '_') { int k = i; char tmpch = input[k]; while (islower(tmpch) || isupper(tmpch) || isdigit(tmpch) || tmpch == '_') { tmpch = input[++k]; } output[j++].setWrod(input + i, k - i, IDv$); i = k; continue; }  if (isdigit(ch)) { int k = i; char tmpch = input[k]; while (isdigit(tmpch)) { tmpch = input[++k]; }  if (tmpch == '.') { tmpch = input[++k]; while (isdigit(tmpch)) { tmpch = input[++k]; }  if (tmpch == 'e' || tmpch == 'E') { tmpch = input[++k]; if (isdigit(tmpch)) { while (isdigit(tmpch)) { tmpch = input[++k]; } output[j++].setWrod(input + i, k - i, realv$); i = k; continue; } else { errorExit(); } }  else { output[j++].setWrod(input + i, k - i, realv$); i = k; continue; } }  else if (tmpch == 'e' || tmpch == 'E') { tmpch = input[++k];  if (isdigit(tmpch)) { while (isdigit(tmpch)) { tmpch = input[++k]; } output[j++].setWrod(input + i, k - i, realev$); i = k; continue; }  else { errorExit(); } }  else { output[j++].setWrod(input + i, k - i, integerv$); i = k; continue; } }  if (ch == '\'') { if (i + 1 < len) { char tmpch = input[i + 1]; if (tmpch == '\\' && +3 < len && input[i + 3] == '\'') { output[j++].setWrod(input + i + 1, 2, characterv$); i = i + 4; continue; } else if (tmpch >= 20 && tmpch <= 126 && input[i + 2] == '\'') { output[j++].setWrod(input + i + 1, 1, characterv$); i = i + 3; continue; } else { errorExit(); } } else { errorExit(); } }  if (ch == '"') { }  if (ch == '#') { if (i + 7 < len && strncmp(input + i, codeToStr[0], 8) == 0) { output[j++].setWrod(input + i, 8, includev$); i = i + 8; } else if (i + 6 < len && strncmp(input + i, codeToStr[1], 7) == 0) { output[j++].setWrod(input + i, 7, definev$); i = i + 7; } else { errorExit(); } } i++; } return j; } int main() {  freopen("data.out", "w+", stdout); freopen("data.in", "r", stdin); char *sourceCodeInput = (char *)malloc(maxn); char *preprocessOutput = (char *)malloc(maxn); memset(preprocessOutput, 0, maxn); memset(sourceCodeInput, 0, maxn);  for (int i = 0; scanf("%c", sourceCodeInput + i) != EOF; i++) ;  preprocess(sourceCodeInput, preprocessOutput);  for (int i = 0; i < (int)strlen(preprocessOutput); i++) { printf("%c", preprocessOutput[i]); } puts("");  wordTuple *wordParseOutput = (wordTuple *)malloc(sizeof(wordTuple) * maxn); int wordsLen = wordParse(preprocessOutput, wordParseOutput);  for (int i = 0; i < wordsLen; i++) { wordParseOutput[i].printWord(); } return 0; } 
word: #define                	 typeCode:   1	key word
word: _CRT_SECURE_NO_WARNINGS	 typeCode:  27	identifier
word: #define                	 typeCode:   1	key word
word: includev               	 typeCode:  27	identifier
word: 0                      	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: definev                	 typeCode:  27	identifier
word: 1                      	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: mainv                  	 typeCode:  27	identifier
word: 2                      	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: ifv                    	 typeCode:  27	identifier
word: 3                      	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: thenv                  	 typeCode:  27	identifier
word: 4                      	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: whilev                 	 typeCode:  27	identifier
word: 5                      	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: dov                    	 typeCode:  27	identifier
word: 6                      	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: staticv                	 typeCode:  27	identifier
word: 7                      	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: intv                   	 typeCode:  27	identifier
word: 8                      	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: doublev                	 typeCode:  27	identifier
word: 9                      	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: structv                	 typeCode:  27	identifier
word: 10                     	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: breakv                 	 typeCode:  27	identifier
word: 11                     	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: elsev                  	 typeCode:  27	identifier
word: 12                     	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: longv                  	 typeCode:  27	identifier
word: 13                     	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: switchv                	 typeCode:  27	identifier
word: 14                     	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: casev                  	 typeCode:  27	identifier
word: 15                     	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: typedefv               	 typeCode:  27	identifier
word: 16                     	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: charv                  	 typeCode:  27	identifier
word: 17                     	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: returnv                	 typeCode:  27	identifier
word: 18                     	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: constv                 	 typeCode:  27	identifier
word: 19                     	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: floatv                 	 typeCode:  27	identifier
word: 20                     	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: shortv                 	 typeCode:  27	identifier
word: 21                     	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: continuev              	 typeCode:  27	identifier
word: 22                     	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: forv                   	 typeCode:  27	identifier
word: 23                     	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: voidv                  	 typeCode:  27	identifier
word: 24                     	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: sizeofv                	 typeCode:  27	identifier
word: 25                     	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: defaultv               	 typeCode:  27	identifier
word: 26                     	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: IDv                    	 typeCode:  27	identifier
word: 27                     	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: integerv               	 typeCode:  27	identifier
word: 28                     	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: realv                  	 typeCode:  27	identifier
word: 29                     	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: addv                   	 typeCode:  27	identifier
word: 30                     	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: addequalv              	 typeCode:  27	identifier
word: 31                     	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: addaddv                	 typeCode:  27	identifier
word: 32                     	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: subv                   	 typeCode:  27	identifier
word: 33                     	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: subsubv                	 typeCode:  27	identifier
word: 34                     	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: subequalv              	 typeCode:  27	identifier
word: 35                     	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: multiplev              	 typeCode:  27	identifier
word: 36                     	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: multipleequalv         	 typeCode:  27	identifier
word: 37                     	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: dividev                	 typeCode:  27	identifier
word: 38                     	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: divideequalv           	 typeCode:  27	identifier
word: 39                     	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: colonv                 	 typeCode:  27	identifier
word: 40                     	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: equalv                 	 typeCode:  27	identifier
word: 41                     	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: lessv                  	 typeCode:  27	identifier
word: 42                     	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: notequalv              	 typeCode:  27	identifier
word: 43                     	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: lessequalv             	 typeCode:  27	identifier
word: 44                     	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: greaterv               	 typeCode:  27	identifier
word: 45                     	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: greaterequalv          	 typeCode:  27	identifier
word: 46                     	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: assign                 	 typeCode:  27	identifier
word: 47                     	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: semicolonv             	 typeCode:  27	identifier
word: 48                     	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: leftbracketv           	 typeCode:  27	identifier
word: 49                     	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: rightbracketv          	 typeCode:  27	identifier
word: 50                     	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: realev                 	 typeCode:  27	identifier
word: 51                     	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: undefinedv             	 typeCode:  27	identifier
word: 52                     	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: stringv                	 typeCode:  27	identifier
word: 53                     	 typeCode:  28	integer
word: #define                	 typeCode:   1	key word
word: characterv             	 typeCode:  27	identifier
word: 54                     	 typeCode:  28	integer
word: #include               	 typeCode:   0	key word
word: #include               	 typeCode:   0	key word
word: #include               	 typeCode:   0	key word
word: #include               	 typeCode:   0	key word
word: #include               	 typeCode:   0	key word
word: #include               	 typeCode:   0	key word
word: using                  	 typeCode:  27	identifier
word: namespace              	 typeCode:  27	identifier
word: std                    	 typeCode:  27	identifier
word: ;                      	 typeCode:  48	semicolon
word: const                  	 typeCode:  19	key word
word: int                    	 typeCode:   8	key word
word: maxn                   	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: 1e5                    	 typeCode:  51	reale
word: +                      	 typeCode:  30	add
word: 5                      	 typeCode:  28	integer
word: ;                      	 typeCode:  48	semicolon
word: const                  	 typeCode:  19	key word
word: char                   	 typeCode:  17	key word
word: *                      	 typeCode:  36	multiple
word: codeToStr              	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: {                      	 typeCode:  55	leftbrace
word: "#include"             	 typeCode:  53	string
word: "#define"              	 typeCode:  53	string
word: "main"                 	 typeCode:  53	string
word: "if"                   	 typeCode:  53	string
word: "then"                 	 typeCode:  53	string
word: "while"                	 typeCode:  53	string
word: "do"                   	 typeCode:  53	string
word: "static"               	 typeCode:  53	string
word: "int"                  	 typeCode:  53	string
word: "double"               	 typeCode:  53	string
word: "struct"               	 typeCode:  53	string
word: "break"                	 typeCode:  53	string
word: "else"                 	 typeCode:  53	string
word: "long"                 	 typeCode:  53	string
word: "switch"               	 typeCode:  53	string
word: "case"                 	 typeCode:  53	string
word: "typedef"              	 typeCode:  53	string
word: "char"                 	 typeCode:  53	string
word: "return"               	 typeCode:  53	string
word: "const"                	 typeCode:  53	string
word: "float"                	 typeCode:  53	string
word: "short"                	 typeCode:  53	string
word: "continue"             	 typeCode:  53	string
word: "for"                  	 typeCode:  53	string
word: "void"                 	 typeCode:  53	string
word: "sizeof"               	 typeCode:  53	string
word: "default"              	 typeCode:  53	string
word: "identifier"           	 typeCode:  53	string
word: "integer"              	 typeCode:  53	string
word: "real"                 	 typeCode:  53	string
word: "add"                  	 typeCode:  53	string
word: "addequal"             	 typeCode:  53	string
word: "addadd"               	 typeCode:  53	string
word: "sub"                  	 typeCode:  53	string
word: "subsub"               	 typeCode:  53	string
word: "subequal"             	 typeCode:  53	string
word: "multiple"             	 typeCode:  53	string
word: "multipleequal"        	 typeCode:  53	string
word: "divide"               	 typeCode:  53	string
word: "divideequal"          	 typeCode:  53	string
word: "colon"                	 typeCode:  53	string
word: "equal"                	 typeCode:  53	string
word: "less"                 	 typeCode:  53	string
word: "notequal"             	 typeCode:  53	string
word: "lessequal"            	 typeCode:  53	string
word: "greater"              	 typeCode:  53	string
word: "greaterequal"         	 typeCode:  53	string
word: "assign$"              	 typeCode:  53	string
word: "semicolon"            	 typeCode:  53	string
word: "leftbracket"          	 typeCode:  53	string
word: "rightbracket"         	 typeCode:  53	string
word: "reale"                	 typeCode:  53	string
word: "undefined"            	 typeCode:  53	string
word: "string"               	 typeCode:  53	string
word: "character"            	 typeCode:  53	string
word: }                      	 typeCode:  56	rightbrace
word: ;                      	 typeCode:  48	semicolon
word: struct                 	 typeCode:  10	key word
word: wordTuple              	 typeCode:  27	identifier
word: {                      	 typeCode:  55	leftbrace
word: char                   	 typeCode:  17	key word
word: *                      	 typeCode:  36	multiple
word: word                   	 typeCode:  27	identifier
word: ;                      	 typeCode:  48	semicolon
word: int                    	 typeCode:   8	key word
word: len                    	 typeCode:  27	identifier
word: ;                      	 typeCode:  48	semicolon
word: int                    	 typeCode:   8	key word
word: typeCode               	 typeCode:  27	identifier
word: ;                      	 typeCode:  48	semicolon
word: void                   	 typeCode:  24	key word
word: setWrod                	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: char                   	 typeCode:  17	key word
word: *                      	 typeCode:  36	multiple
word: source                 	 typeCode:  27	identifier
word: int                    	 typeCode:   8	key word
word: sz                     	 typeCode:  27	identifier
word: int                    	 typeCode:   8	key word
word: tc                     	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: {                      	 typeCode:  55	leftbrace
word: len                    	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: sz                     	 typeCode:  27	identifier
word: +                      	 typeCode:  30	add
word: 3                      	 typeCode:  28	integer
word: ;                      	 typeCode:  48	semicolon
word: word                   	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: (                      	 typeCode:  49	leftbracket
word: char                   	 typeCode:  17	key word
word: *                      	 typeCode:  36	multiple
word: )                      	 typeCode:  50	rightbracket
word: malloc                 	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: len                    	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: ;                      	 typeCode:  48	semicolon
word: memset                 	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: word                   	 typeCode:  27	identifier
word: 0                      	 typeCode:  28	integer
word: sizeof                 	 typeCode:  25	key word
word: (                      	 typeCode:  49	leftbracket
word: word                   	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: )                      	 typeCode:  50	rightbracket
word: ;                      	 typeCode:  48	semicolon
word: strncpy                	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: word                   	 typeCode:  27	identifier
word: source                 	 typeCode:  27	identifier
word: sz                     	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: ;                      	 typeCode:  48	semicolon
word: word                   	 typeCode:  27	identifier
word: sz                     	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: 0                      	 typeCode:  28	integer
word: ;                      	 typeCode:  48	semicolon
word: typeCode               	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: tc                     	 typeCode:  27	identifier
word: ;                      	 typeCode:  48	semicolon
word: }                      	 typeCode:  56	rightbrace
word: void                   	 typeCode:  24	key word
word: printWord              	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: )                      	 typeCode:  50	rightbracket
word: {                      	 typeCode:  55	leftbrace
word: getTypeCode            	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: )                      	 typeCode:  50	rightbracket
word: ;                      	 typeCode:  48	semicolon
word: printf                 	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: "word: %s"             	 typeCode:  53	string
word: word                   	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: ;                      	 typeCode:  48	semicolon
word: for                    	 typeCode:  23	key word
word: (                      	 typeCode:  49	leftbracket
word: int                    	 typeCode:   8	key word
word: i                      	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: 0                      	 typeCode:  28	integer
word: ;                      	 typeCode:  48	semicolon
word: i                      	 typeCode:  27	identifier
word: <                      	 typeCode:  42	less
word: 26                     	 typeCode:  28	integer
word: -                      	 typeCode:  33	sub
word: len                    	 typeCode:  27	identifier
word: ;                      	 typeCode:  48	semicolon
word: i                      	 typeCode:  27	identifier
word: ++                     	 typeCode:  32	addadd
word: )                      	 typeCode:  50	rightbracket
word: printf                 	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: " "                    	 typeCode:  53	string
word: )                      	 typeCode:  50	rightbracket
word: ;                      	 typeCode:  48	semicolon
word: printf                 	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: "\t typeCode: %3d\t"   	 typeCode:  53	string
word: typeCode               	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: ;                      	 typeCode:  48	semicolon
word: if                     	 typeCode:   3	key word
word: (                      	 typeCode:  49	leftbracket
word: typeCode               	 typeCode:  27	identifier
word: ==                     	 typeCode:  41	equal
word: integerv               	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: puts                   	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: "整数"               	 typeCode:  53	string
word: )                      	 typeCode:  50	rightbracket
word: ;                      	 typeCode:  48	semicolon
word: else                   	 typeCode:  12	key word
word: if                     	 typeCode:   3	key word
word: (                      	 typeCode:  49	leftbracket
word: typeCode               	 typeCode:  27	identifier
word: ==                     	 typeCode:  41	equal
word: realv                  	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: puts                   	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: "实数"               	 typeCode:  53	string
word: )                      	 typeCode:  50	rightbracket
word: ;                      	 typeCode:  48	semicolon
word: else                   	 typeCode:  12	key word
word: if                     	 typeCode:   3	key word
word: (                      	 typeCode:  49	leftbracket
word: typeCode               	 typeCode:  27	identifier
word: ==                     	 typeCode:  41	equal
word: realev                 	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: puts                   	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: "科学计数法"      	 typeCode:  53	string
word: )                      	 typeCode:  50	rightbracket
word: ;                      	 typeCode:  48	semicolon
word: else                   	 typeCode:  12	key word
word: if                     	 typeCode:   3	key word
word: (                      	 typeCode:  49	leftbracket
word: typeCode               	 typeCode:  27	identifier
word: ==                     	 typeCode:  41	equal
word: IDv                    	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: puts                   	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: "标识符"            	 typeCode:  53	string
word: )                      	 typeCode:  50	rightbracket
word: ;                      	 typeCode:  48	semicolon
word: else                   	 typeCode:  12	key word
word: if                     	 typeCode:   3	key word
word: (                      	 typeCode:  49	leftbracket
word: typeCode               	 typeCode:  27	identifier
word: ==                     	 typeCode:  41	equal
word: characterv             	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: puts                   	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: "字符"               	 typeCode:  53	string
word: )                      	 typeCode:  50	rightbracket
word: ;                      	 typeCode:  48	semicolon
word: else                   	 typeCode:  12	key word
word: if                     	 typeCode:   3	key word
word: (                      	 typeCode:  49	leftbracket
word: typeCode               	 typeCode:  27	identifier
word: ==                     	 typeCode:  41	equal
word: stringv                	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: puts                   	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: "字符串"            	 typeCode:  53	string
word: )                      	 typeCode:  50	rightbracket
word: ;                      	 typeCode:  48	semicolon
word: else                   	 typeCode:  12	key word
word: puts                   	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: ""                     	 typeCode:  53	string
word: )                      	 typeCode:  50	rightbracket
word: ;                      	 typeCode:  48	semicolon
word: }                      	 typeCode:  56	rightbrace
word: void                   	 typeCode:  24	key word
word: getTypeCode            	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: )                      	 typeCode:  50	rightbracket
word: {                      	 typeCode:  55	leftbrace
word: if                     	 typeCode:   3	key word
word: (                      	 typeCode:  49	leftbracket
word: typeCode               	 typeCode:  27	identifier
word: ==                     	 typeCode:  41	equal
word: IDv                    	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: {                      	 typeCode:  55	leftbrace
word: for                    	 typeCode:  23	key word
word: (                      	 typeCode:  49	leftbracket
word: int                    	 typeCode:   8	key word
word: i                      	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: 2                      	 typeCode:  28	integer
word: ;                      	 typeCode:  48	semicolon
word: i                      	 typeCode:  27	identifier
word: <=                     	 typeCode:  44	lessequal
word: 26                     	 typeCode:  28	integer
word: ;                      	 typeCode:  48	semicolon
word: i                      	 typeCode:  27	identifier
word: ++                     	 typeCode:  32	addadd
word: )                      	 typeCode:  50	rightbracket
word: {                      	 typeCode:  55	leftbrace
word: if                     	 typeCode:   3	key word
word: (                      	 typeCode:  49	leftbracket
word: strcmp                 	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: word                   	 typeCode:  27	identifier
word: codeToStr              	 typeCode:  27	identifier
word: i                      	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: ==                     	 typeCode:  41	equal
word: 0                      	 typeCode:  28	integer
word: )                      	 typeCode:  50	rightbracket
word: {                      	 typeCode:  55	leftbrace
word: typeCode               	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: i                      	 typeCode:  27	identifier
word: ;                      	 typeCode:  48	semicolon
word: break                  	 typeCode:  11	key word
word: ;                      	 typeCode:  48	semicolon
word: }                      	 typeCode:  56	rightbrace
word: }                      	 typeCode:  56	rightbrace
word: }                      	 typeCode:  56	rightbrace
word: }                      	 typeCode:  56	rightbrace
word: }                      	 typeCode:  56	rightbrace
word: ;                      	 typeCode:  48	semicolon
word: void                   	 typeCode:  24	key word
word: preprocess             	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: char                   	 typeCode:  17	key word
word: *                      	 typeCode:  36	multiple
word: input                  	 typeCode:  27	identifier
word: char                   	 typeCode:  17	key word
word: *                      	 typeCode:  36	multiple
word: output                 	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: {                      	 typeCode:  55	leftbrace
word: int                    	 typeCode:   8	key word
word: len                    	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: strlen                 	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: input                  	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: ;                      	 typeCode:  48	semicolon
word: int                    	 typeCode:   8	key word
word: i                      	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: 0                      	 typeCode:  28	integer
word: j                      	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: 0                      	 typeCode:  28	integer
word: ;                      	 typeCode:  48	semicolon
word: bool                   	 typeCode:  27	identifier
word: spaceGot               	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: false                  	 typeCode:  27	identifier
word: lineCommentGot         	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: false                  	 typeCode:  27	identifier
word: blockCommentGot        	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: false                  	 typeCode:  27	identifier
word: stringGot              	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: false                  	 typeCode:  27	identifier
word: ;                      	 typeCode:  48	semicolon
word: while                  	 typeCode:   5	key word
word: (                      	 typeCode:  49	leftbracket
word: i                      	 typeCode:  27	identifier
word: <                      	 typeCode:  42	less
word: len                    	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: {                      	 typeCode:  55	leftbrace
word: char                   	 typeCode:  17	key word
word: tmpch                  	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: input                  	 typeCode:  27	identifier
word: i                      	 typeCode:  27	identifier
word: ;                      	 typeCode:  48	semicolon
word: if                     	 typeCode:   3	key word
word: (                      	 typeCode:  49	leftbracket
word: lineCommentGot         	 typeCode:  27	identifier
word: blockCommentGot        	 typeCode:  27	identifier
word: stringGot              	 typeCode:  27	identifier
word: spaceGot               	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: tmpch                  	 typeCode:  27	identifier
word: ==                     	 typeCode:  41	equal
word: ' '                    	 typeCode:  54	character
word: tmpch                  	 typeCode:  27	identifier
word: ==                     	 typeCode:  41	equal
word: '\n'                   	 typeCode:  54	character
word: tmpch                  	 typeCode:  27	identifier
word: ==                     	 typeCode:  41	equal
word: '\t'                   	 typeCode:  54	character
word: tmpch                  	 typeCode:  27	identifier
word: ==                     	 typeCode:  41	equal
word: '\r'                   	 typeCode:  54	character
word: )                      	 typeCode:  50	rightbracket
word: )                      	 typeCode:  50	rightbracket
word: {                      	 typeCode:  55	leftbrace
word: spaceGot               	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: true                   	 typeCode:  27	identifier
word: ;                      	 typeCode:  48	semicolon
word: output                 	 typeCode:  27	identifier
word: j                      	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: ' '                    	 typeCode:  54	character
word: ;                      	 typeCode:  48	semicolon
word: i                      	 typeCode:  27	identifier
word: ++                     	 typeCode:  32	addadd
word: ;                      	 typeCode:  48	semicolon
word: j                      	 typeCode:  27	identifier
word: ++                     	 typeCode:  32	addadd
word: ;                      	 typeCode:  48	semicolon
word: continue               	 typeCode:  22	key word
word: ;                      	 typeCode:  48	semicolon
word: }                      	 typeCode:  56	rightbrace
word: if                     	 typeCode:   3	key word
word: (                      	 typeCode:  49	leftbracket
word: lineCommentGot         	 typeCode:  27	identifier
word: blockCommentGot        	 typeCode:  27	identifier
word: stringGot              	 typeCode:  27	identifier
word: tmpch                  	 typeCode:  27	identifier
word: ==                     	 typeCode:  41	equal
word: '"'                    	 typeCode:  54	character
word: i                      	 typeCode:  27	identifier
word: -                      	 typeCode:  33	sub
word: 1                      	 typeCode:  28	integer
word: >                      	 typeCode:  45	greater
word: 0                      	 typeCode:  28	integer
word: input                  	 typeCode:  27	identifier
word: i                      	 typeCode:  27	identifier
word: -                      	 typeCode:  33	sub
word: 1                      	 typeCode:  28	integer
word: !=                     	 typeCode:  43	notequal
word: '\\'                   	 typeCode:  54	character
word: input                  	 typeCode:  27	identifier
word: i                      	 typeCode:  27	identifier
word: -                      	 typeCode:  33	sub
word: 1                      	 typeCode:  28	integer
word: !=                     	 typeCode:  43	notequal
word: '\''                   	 typeCode:  54	character
word: )                      	 typeCode:  50	rightbracket
word: {                      	 typeCode:  55	leftbrace
word: stringGot              	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: true                   	 typeCode:  27	identifier
word: ;                      	 typeCode:  48	semicolon
word: spaceGot               	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: false                  	 typeCode:  27	identifier
word: ;                      	 typeCode:  48	semicolon
word: output                 	 typeCode:  27	identifier
word: j                      	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: tmpch                  	 typeCode:  27	identifier
word: ;                      	 typeCode:  48	semicolon
word: j                      	 typeCode:  27	identifier
word: ++                     	 typeCode:  32	addadd
word: ;                      	 typeCode:  48	semicolon
word: i                      	 typeCode:  27	identifier
word: ++                     	 typeCode:  32	addadd
word: ;                      	 typeCode:  48	semicolon
word: continue               	 typeCode:  22	key word
word: ;                      	 typeCode:  48	semicolon
word: }                      	 typeCode:  56	rightbrace
word: if                     	 typeCode:   3	key word
word: (                      	 typeCode:  49	leftbracket
word: blockCommentGot        	 typeCode:  27	identifier
word: stringGot              	 typeCode:  27	identifier
word: tmpch                  	 typeCode:  27	identifier
word: ==                     	 typeCode:  41	equal
word: '/'                    	 typeCode:  54	character
word: i                      	 typeCode:  27	identifier
word: !=                     	 typeCode:  43	notequal
word: len                    	 typeCode:  27	identifier
word: -                      	 typeCode:  33	sub
word: 1                      	 typeCode:  28	integer
word: input                  	 typeCode:  27	identifier
word: i                      	 typeCode:  27	identifier
word: +                      	 typeCode:  30	add
word: 1                      	 typeCode:  28	integer
word: ==                     	 typeCode:  41	equal
word: '/'                    	 typeCode:  54	character
word: )                      	 typeCode:  50	rightbracket
word: {                      	 typeCode:  55	leftbrace
word: i                      	 typeCode:  27	identifier
word: +=                     	 typeCode:  31	addequal
word: 2                      	 typeCode:  28	integer
word: ;                      	 typeCode:  48	semicolon
word: lineCommentGot         	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: true                   	 typeCode:  27	identifier
word: ;                      	 typeCode:  48	semicolon
word: spaceGot               	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: false                  	 typeCode:  27	identifier
word: ;                      	 typeCode:  48	semicolon
word: continue               	 typeCode:  22	key word
word: ;                      	 typeCode:  48	semicolon
word: }                      	 typeCode:  56	rightbrace
word: if                     	 typeCode:   3	key word
word: (                      	 typeCode:  49	leftbracket
word: lineCommentGot         	 typeCode:  27	identifier
word: stringGot              	 typeCode:  27	identifier
word: tmpch                  	 typeCode:  27	identifier
word: ==                     	 typeCode:  41	equal
word: '/'                    	 typeCode:  54	character
word: i                      	 typeCode:  27	identifier
word: !=                     	 typeCode:  43	notequal
word: len                    	 typeCode:  27	identifier
word: -                      	 typeCode:  33	sub
word: 1                      	 typeCode:  28	integer
word: input                  	 typeCode:  27	identifier
word: i                      	 typeCode:  27	identifier
word: +                      	 typeCode:  30	add
word: 1                      	 typeCode:  28	integer
word: ==                     	 typeCode:  41	equal
word: '*'                    	 typeCode:  54	character
word: )                      	 typeCode:  50	rightbracket
word: {                      	 typeCode:  55	leftbrace
word: i                      	 typeCode:  27	identifier
word: +=                     	 typeCode:  31	addequal
word: 2                      	 typeCode:  28	integer
word: ;                      	 typeCode:  48	semicolon
word: blockCommentGot        	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: true                   	 typeCode:  27	identifier
word: ;                      	 typeCode:  48	semicolon
word: spaceGot               	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: false                  	 typeCode:  27	identifier
word: ;                      	 typeCode:  48	semicolon
word: continue               	 typeCode:  22	key word
word: ;                      	 typeCode:  48	semicolon
word: }                      	 typeCode:  56	rightbrace
word: if                     	 typeCode:   3	key word
word: (                      	 typeCode:  49	leftbracket
word: lineCommentGot         	 typeCode:  27	identifier
word: blockCommentGot        	 typeCode:  27	identifier
word: stringGot              	 typeCode:  27	identifier
word: spaceGot               	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: tmpch                  	 typeCode:  27	identifier
word: ==                     	 typeCode:  41	equal
word: ' '                    	 typeCode:  54	character
word: tmpch                  	 typeCode:  27	identifier
word: ==                     	 typeCode:  41	equal
word: '\n'                   	 typeCode:  54	character
word: tmpch                  	 typeCode:  27	identifier
word: ==                     	 typeCode:  41	equal
word: '\t'                   	 typeCode:  54	character
word: tmpch                  	 typeCode:  27	identifier
word: ==                     	 typeCode:  41	equal
word: '\r'                   	 typeCode:  54	character
word: )                      	 typeCode:  50	rightbracket
word: )                      	 typeCode:  50	rightbracket
word: {                      	 typeCode:  55	leftbrace
word: i                      	 typeCode:  27	identifier
word: ++                     	 typeCode:  32	addadd
word: ;                      	 typeCode:  48	semicolon
word: continue               	 typeCode:  22	key word
word: ;                      	 typeCode:  48	semicolon
word: }                      	 typeCode:  56	rightbrace
word: if                     	 typeCode:   3	key word
word: (                      	 typeCode:  49	leftbracket
word: blockCommentGot        	 typeCode:  27	identifier
word: stringGot              	 typeCode:  27	identifier
word: lineCommentGot         	 typeCode:  27	identifier
word: tmpch                  	 typeCode:  27	identifier
word: !=                     	 typeCode:  43	notequal
word: '\n'                   	 typeCode:  54	character
word: )                      	 typeCode:  50	rightbracket
word: {                      	 typeCode:  55	leftbrace
word: i                      	 typeCode:  27	identifier
word: ++                     	 typeCode:  32	addadd
word: ;                      	 typeCode:  48	semicolon
word: continue               	 typeCode:  22	key word
word: ;                      	 typeCode:  48	semicolon
word: }                      	 typeCode:  56	rightbrace
word: if                     	 typeCode:   3	key word
word: (                      	 typeCode:  49	leftbracket
word: lineCommentGot         	 typeCode:  27	identifier
word: stringGot              	 typeCode:  27	identifier
word: blockCommentGot        	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: tmpch                  	 typeCode:  27	identifier
word: !=                     	 typeCode:  43	notequal
word: '*'                    	 typeCode:  54	character
word: (                      	 typeCode:  49	leftbracket
word: i                      	 typeCode:  27	identifier
word: !=                     	 typeCode:  43	notequal
word: len                    	 typeCode:  27	identifier
word: -                      	 typeCode:  33	sub
word: 1                      	 typeCode:  28	integer
word: input                  	 typeCode:  27	identifier
word: i                      	 typeCode:  27	identifier
word: +                      	 typeCode:  30	add
word: 1                      	 typeCode:  28	integer
word: !=                     	 typeCode:  43	notequal
word: '/'                    	 typeCode:  54	character
word: )                      	 typeCode:  50	rightbracket
word: )                      	 typeCode:  50	rightbracket
word: )                      	 typeCode:  50	rightbracket
word: {                      	 typeCode:  55	leftbrace
word: i                      	 typeCode:  27	identifier
word: ++                     	 typeCode:  32	addadd
word: ;                      	 typeCode:  48	semicolon
word: continue               	 typeCode:  22	key word
word: ;                      	 typeCode:  48	semicolon
word: }                      	 typeCode:  56	rightbrace
word: if                     	 typeCode:   3	key word
word: (                      	 typeCode:  49	leftbracket
word: stringGot              	 typeCode:  27	identifier
word: blockCommentGot        	 typeCode:  27	identifier
word: lineCommentGot         	 typeCode:  27	identifier
word: tmpch                  	 typeCode:  27	identifier
word: ==                     	 typeCode:  41	equal
word: '\n'                   	 typeCode:  54	character
word: )                      	 typeCode:  50	rightbracket
word: {                      	 typeCode:  55	leftbrace
word: i                      	 typeCode:  27	identifier
word: ++                     	 typeCode:  32	addadd
word: ;                      	 typeCode:  48	semicolon
word: lineCommentGot         	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: false                  	 typeCode:  27	identifier
word: ;                      	 typeCode:  48	semicolon
word: continue               	 typeCode:  22	key word
word: ;                      	 typeCode:  48	semicolon
word: }                      	 typeCode:  56	rightbrace
word: if                     	 typeCode:   3	key word
word: (                      	 typeCode:  49	leftbracket
word: stringGot              	 typeCode:  27	identifier
word: lineCommentGot         	 typeCode:  27	identifier
word: blockCommentGot        	 typeCode:  27	identifier
word: tmpch                  	 typeCode:  27	identifier
word: ==                     	 typeCode:  41	equal
word: '*'                    	 typeCode:  54	character
word: i                      	 typeCode:  27	identifier
word: !=                     	 typeCode:  43	notequal
word: len                    	 typeCode:  27	identifier
word: -                      	 typeCode:  33	sub
word: 1                      	 typeCode:  28	integer
word: input                  	 typeCode:  27	identifier
word: i                      	 typeCode:  27	identifier
word: +                      	 typeCode:  30	add
word: 1                      	 typeCode:  28	integer
word: ==                     	 typeCode:  41	equal
word: '/'                    	 typeCode:  54	character
word: )                      	 typeCode:  50	rightbracket
word: {                      	 typeCode:  55	leftbrace
word: blockCommentGot        	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: false                  	 typeCode:  27	identifier
word: ;                      	 typeCode:  48	semicolon
word: i                      	 typeCode:  27	identifier
word: +=                     	 typeCode:  31	addequal
word: 2                      	 typeCode:  28	integer
word: ;                      	 typeCode:  48	semicolon
word: continue               	 typeCode:  22	key word
word: ;                      	 typeCode:  48	semicolon
word: }                      	 typeCode:  56	rightbrace
word: if                     	 typeCode:   3	key word
word: (                      	 typeCode:  49	leftbracket
word: lineCommentGot         	 typeCode:  27	identifier
word: blockCommentGot        	 typeCode:  27	identifier
word: stringGot              	 typeCode:  27	identifier
word: tmpch                  	 typeCode:  27	identifier
word: ==                     	 typeCode:  41	equal
word: '"'                    	 typeCode:  54	character
word: i                      	 typeCode:  27	identifier
word: -                      	 typeCode:  33	sub
word: 1                      	 typeCode:  28	integer
word: >                      	 typeCode:  45	greater
word: 0                      	 typeCode:  28	integer
word: input                  	 typeCode:  27	identifier
word: i                      	 typeCode:  27	identifier
word: -                      	 typeCode:  33	sub
word: 1                      	 typeCode:  28	integer
word: !=                     	 typeCode:  43	notequal
word: '\\'                   	 typeCode:  54	character
word: input                  	 typeCode:  27	identifier
word: i                      	 typeCode:  27	identifier
word: -                      	 typeCode:  33	sub
word: 1                      	 typeCode:  28	integer
word: !=                     	 typeCode:  43	notequal
word: '\''                   	 typeCode:  54	character
word: )                      	 typeCode:  50	rightbracket
word: {                      	 typeCode:  55	leftbrace
word: stringGot              	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: false                  	 typeCode:  27	identifier
word: ;                      	 typeCode:  48	semicolon
word: output                 	 typeCode:  27	identifier
word: j                      	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: tmpch                  	 typeCode:  27	identifier
word: ;                      	 typeCode:  48	semicolon
word: j                      	 typeCode:  27	identifier
word: ++                     	 typeCode:  32	addadd
word: ;                      	 typeCode:  48	semicolon
word: i                      	 typeCode:  27	identifier
word: ++                     	 typeCode:  32	addadd
word: ;                      	 typeCode:  48	semicolon
word: continue               	 typeCode:  22	key word
word: ;                      	 typeCode:  48	semicolon
word: }                      	 typeCode:  56	rightbrace
word: output                 	 typeCode:  27	identifier
word: j                      	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: input                  	 typeCode:  27	identifier
word: i                      	 typeCode:  27	identifier
word: ;                      	 typeCode:  48	semicolon
word: i                      	 typeCode:  27	identifier
word: ++                     	 typeCode:  32	addadd
word: ;                      	 typeCode:  48	semicolon
word: j                      	 typeCode:  27	identifier
word: ++                     	 typeCode:  32	addadd
word: ;                      	 typeCode:  48	semicolon
word: spaceGot               	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: blockCommentGot        	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: lineCommentGot         	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: false                  	 typeCode:  27	identifier
word: ;                      	 typeCode:  48	semicolon
word: }                      	 typeCode:  56	rightbrace
word: output                 	 typeCode:  27	identifier
word: j                      	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: 0                      	 typeCode:  28	integer
word: ;                      	 typeCode:  48	semicolon
word: }                      	 typeCode:  56	rightbrace
word: bool                   	 typeCode:  27	identifier
word: islower                	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: char                   	 typeCode:  17	key word
word: ch                     	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: {                      	 typeCode:  55	leftbrace
word: return                 	 typeCode:  18	key word
word: ch                     	 typeCode:  27	identifier
word: >=                     	 typeCode:  46	greaterequal
word: 'a'                    	 typeCode:  54	character
word: ch                     	 typeCode:  27	identifier
word: <=                     	 typeCode:  44	lessequal
word: 'z'                    	 typeCode:  54	character
word: ;                      	 typeCode:  48	semicolon
word: }                      	 typeCode:  56	rightbrace
word: bool                   	 typeCode:  27	identifier
word: isupper                	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: char                   	 typeCode:  17	key word
word: ch                     	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: {                      	 typeCode:  55	leftbrace
word: return                 	 typeCode:  18	key word
word: ch                     	 typeCode:  27	identifier
word: >=                     	 typeCode:  46	greaterequal
word: 'A'                    	 typeCode:  54	character
word: ch                     	 typeCode:  27	identifier
word: <=                     	 typeCode:  44	lessequal
word: 'Z'                    	 typeCode:  54	character
word: ;                      	 typeCode:  48	semicolon
word: }                      	 typeCode:  56	rightbrace
word: bool                   	 typeCode:  27	identifier
word: isdigit                	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: char                   	 typeCode:  17	key word
word: ch                     	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: {                      	 typeCode:  55	leftbrace
word: return                 	 typeCode:  18	key word
word: ch                     	 typeCode:  27	identifier
word: >=                     	 typeCode:  46	greaterequal
word: '0'                    	 typeCode:  54	character
word: ch                     	 typeCode:  27	identifier
word: <=                     	 typeCode:  44	lessequal
word: '9'                    	 typeCode:  54	character
word: ;                      	 typeCode:  48	semicolon
word: }                      	 typeCode:  56	rightbrace
word: void                   	 typeCode:  24	key word
word: errorExit              	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: )                      	 typeCode:  50	rightbracket
word: {                      	 typeCode:  55	leftbrace
word: printf                 	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: "Error"                	 typeCode:  53	string
word: )                      	 typeCode:  50	rightbracket
word: ;                      	 typeCode:  48	semicolon
word: exit                   	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: 0                      	 typeCode:  28	integer
word: )                      	 typeCode:  50	rightbracket
word: ;                      	 typeCode:  48	semicolon
word: }                      	 typeCode:  56	rightbrace
word: int                    	 typeCode:   8	key word
word: wordParse              	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: char                   	 typeCode:  17	key word
word: *                      	 typeCode:  36	multiple
word: input                  	 typeCode:  27	identifier
word: wordTuple              	 typeCode:  27	identifier
word: *                      	 typeCode:  36	multiple
word: output                 	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: {                      	 typeCode:  55	leftbrace
word: int                    	 typeCode:   8	key word
word: len                    	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: strlen                 	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: input                  	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: j                      	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: 0                      	 typeCode:  28	integer
word: i                      	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: 0                      	 typeCode:  28	integer
word: ;                      	 typeCode:  48	semicolon
word: while                  	 typeCode:   5	key word
word: (                      	 typeCode:  49	leftbracket
word: i                      	 typeCode:  27	identifier
word: <                      	 typeCode:  42	less
word: len                    	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: {                      	 typeCode:  55	leftbrace
word: char                   	 typeCode:  17	key word
word: ch                     	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: input                  	 typeCode:  27	identifier
word: i                      	 typeCode:  27	identifier
word: ;                      	 typeCode:  48	semicolon
word: if                     	 typeCode:   3	key word
word: (                      	 typeCode:  49	leftbracket
word: islower                	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: ch                     	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: isupper                	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: ch                     	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: ch                     	 typeCode:  27	identifier
word: ==                     	 typeCode:  41	equal
word: '_'                    	 typeCode:  54	character
word: )                      	 typeCode:  50	rightbracket
word: {                      	 typeCode:  55	leftbrace
word: int                    	 typeCode:   8	key word
word: k                      	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: i                      	 typeCode:  27	identifier
word: ;                      	 typeCode:  48	semicolon
word: char                   	 typeCode:  17	key word
word: tmpch                  	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: input                  	 typeCode:  27	identifier
word: k                      	 typeCode:  27	identifier
word: ;                      	 typeCode:  48	semicolon
word: while                  	 typeCode:   5	key word
word: (                      	 typeCode:  49	leftbracket
word: islower                	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: tmpch                  	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: isupper                	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: tmpch                  	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: isdigit                	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: tmpch                  	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: tmpch                  	 typeCode:  27	identifier
word: ==                     	 typeCode:  41	equal
word: '_'                    	 typeCode:  54	character
word: )                      	 typeCode:  50	rightbracket
word: {                      	 typeCode:  55	leftbrace
word: tmpch                  	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: input                  	 typeCode:  27	identifier
word: ++                     	 typeCode:  32	addadd
word: k                      	 typeCode:  27	identifier
word: ;                      	 typeCode:  48	semicolon
word: }                      	 typeCode:  56	rightbrace
word: output                 	 typeCode:  27	identifier
word: j                      	 typeCode:  27	identifier
word: ++                     	 typeCode:  32	addadd
word: setWrod                	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: input                  	 typeCode:  27	identifier
word: +                      	 typeCode:  30	add
word: i                      	 typeCode:  27	identifier
word: k                      	 typeCode:  27	identifier
word: -                      	 typeCode:  33	sub
word: i                      	 typeCode:  27	identifier
word: IDv                    	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: ;                      	 typeCode:  48	semicolon
word: i                      	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: k                      	 typeCode:  27	identifier
word: ;                      	 typeCode:  48	semicolon
word: continue               	 typeCode:  22	key word
word: ;                      	 typeCode:  48	semicolon
word: }                      	 typeCode:  56	rightbrace
word: if                     	 typeCode:   3	key word
word: (                      	 typeCode:  49	leftbracket
word: isdigit                	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: ch                     	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: )                      	 typeCode:  50	rightbracket
word: {                      	 typeCode:  55	leftbrace
word: int                    	 typeCode:   8	key word
word: k                      	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: i                      	 typeCode:  27	identifier
word: ;                      	 typeCode:  48	semicolon
word: char                   	 typeCode:  17	key word
word: tmpch                  	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: input                  	 typeCode:  27	identifier
word: k                      	 typeCode:  27	identifier
word: ;                      	 typeCode:  48	semicolon
word: while                  	 typeCode:   5	key word
word: (                      	 typeCode:  49	leftbracket
word: isdigit                	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: tmpch                  	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: )                      	 typeCode:  50	rightbracket
word: {                      	 typeCode:  55	leftbrace
word: tmpch                  	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: input                  	 typeCode:  27	identifier
word: ++                     	 typeCode:  32	addadd
word: k                      	 typeCode:  27	identifier
word: ;                      	 typeCode:  48	semicolon
word: }                      	 typeCode:  56	rightbrace
word: if                     	 typeCode:   3	key word
word: (                      	 typeCode:  49	leftbracket
word: tmpch                  	 typeCode:  27	identifier
word: ==                     	 typeCode:  41	equal
word: '.'                    	 typeCode:  54	character
word: )                      	 typeCode:  50	rightbracket
word: {                      	 typeCode:  55	leftbrace
word: tmpch                  	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: input                  	 typeCode:  27	identifier
word: ++                     	 typeCode:  32	addadd
word: k                      	 typeCode:  27	identifier
word: ;                      	 typeCode:  48	semicolon
word: while                  	 typeCode:   5	key word
word: (                      	 typeCode:  49	leftbracket
word: isdigit                	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: tmpch                  	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: )                      	 typeCode:  50	rightbracket
word: {                      	 typeCode:  55	leftbrace
word: tmpch                  	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: input                  	 typeCode:  27	identifier
word: ++                     	 typeCode:  32	addadd
word: k                      	 typeCode:  27	identifier
word: ;                      	 typeCode:  48	semicolon
word: }                      	 typeCode:  56	rightbrace
word: if                     	 typeCode:   3	key word
word: (                      	 typeCode:  49	leftbracket
word: tmpch                  	 typeCode:  27	identifier
word: ==                     	 typeCode:  41	equal
word: 'e'                    	 typeCode:  54	character
word: tmpch                  	 typeCode:  27	identifier
word: ==                     	 typeCode:  41	equal
word: 'E'                    	 typeCode:  54	character
word: )                      	 typeCode:  50	rightbracket
word: {                      	 typeCode:  55	leftbrace
word: tmpch                  	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: input                  	 typeCode:  27	identifier
word: ++                     	 typeCode:  32	addadd
word: k                      	 typeCode:  27	identifier
word: ;                      	 typeCode:  48	semicolon
word: if                     	 typeCode:   3	key word
word: (                      	 typeCode:  49	leftbracket
word: isdigit                	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: tmpch                  	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: )                      	 typeCode:  50	rightbracket
word: {                      	 typeCode:  55	leftbrace
word: while                  	 typeCode:   5	key word
word: (                      	 typeCode:  49	leftbracket
word: isdigit                	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: tmpch                  	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: )                      	 typeCode:  50	rightbracket
word: {                      	 typeCode:  55	leftbrace
word: tmpch                  	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: input                  	 typeCode:  27	identifier
word: ++                     	 typeCode:  32	addadd
word: k                      	 typeCode:  27	identifier
word: ;                      	 typeCode:  48	semicolon
word: }                      	 typeCode:  56	rightbrace
word: output                 	 typeCode:  27	identifier
word: j                      	 typeCode:  27	identifier
word: ++                     	 typeCode:  32	addadd
word: setWrod                	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: input                  	 typeCode:  27	identifier
word: +                      	 typeCode:  30	add
word: i                      	 typeCode:  27	identifier
word: k                      	 typeCode:  27	identifier
word: -                      	 typeCode:  33	sub
word: i                      	 typeCode:  27	identifier
word: realv                  	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: ;                      	 typeCode:  48	semicolon
word: i                      	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: k                      	 typeCode:  27	identifier
word: ;                      	 typeCode:  48	semicolon
word: continue               	 typeCode:  22	key word
word: ;                      	 typeCode:  48	semicolon
word: }                      	 typeCode:  56	rightbrace
word: else                   	 typeCode:  12	key word
word: {                      	 typeCode:  55	leftbrace
word: errorExit              	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: )                      	 typeCode:  50	rightbracket
word: ;                      	 typeCode:  48	semicolon
word: }                      	 typeCode:  56	rightbrace
word: }                      	 typeCode:  56	rightbrace
word: else                   	 typeCode:  12	key word
word: {                      	 typeCode:  55	leftbrace
word: output                 	 typeCode:  27	identifier
word: j                      	 typeCode:  27	identifier
word: ++                     	 typeCode:  32	addadd
word: setWrod                	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: input                  	 typeCode:  27	identifier
word: +                      	 typeCode:  30	add
word: i                      	 typeCode:  27	identifier
word: k                      	 typeCode:  27	identifier
word: -                      	 typeCode:  33	sub
word: i                      	 typeCode:  27	identifier
word: realv                  	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: ;                      	 typeCode:  48	semicolon
word: i                      	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: k                      	 typeCode:  27	identifier
word: ;                      	 typeCode:  48	semicolon
word: continue               	 typeCode:  22	key word
word: ;                      	 typeCode:  48	semicolon
word: }                      	 typeCode:  56	rightbrace
word: }                      	 typeCode:  56	rightbrace
word: else                   	 typeCode:  12	key word
word: if                     	 typeCode:   3	key word
word: (                      	 typeCode:  49	leftbracket
word: tmpch                  	 typeCode:  27	identifier
word: ==                     	 typeCode:  41	equal
word: 'e'                    	 typeCode:  54	character
word: tmpch                  	 typeCode:  27	identifier
word: ==                     	 typeCode:  41	equal
word: 'E'                    	 typeCode:  54	character
word: )                      	 typeCode:  50	rightbracket
word: {                      	 typeCode:  55	leftbrace
word: tmpch                  	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: input                  	 typeCode:  27	identifier
word: ++                     	 typeCode:  32	addadd
word: k                      	 typeCode:  27	identifier
word: ;                      	 typeCode:  48	semicolon
word: if                     	 typeCode:   3	key word
word: (                      	 typeCode:  49	leftbracket
word: isdigit                	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: tmpch                  	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: )                      	 typeCode:  50	rightbracket
word: {                      	 typeCode:  55	leftbrace
word: while                  	 typeCode:   5	key word
word: (                      	 typeCode:  49	leftbracket
word: isdigit                	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: tmpch                  	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: )                      	 typeCode:  50	rightbracket
word: {                      	 typeCode:  55	leftbrace
word: tmpch                  	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: input                  	 typeCode:  27	identifier
word: ++                     	 typeCode:  32	addadd
word: k                      	 typeCode:  27	identifier
word: ;                      	 typeCode:  48	semicolon
word: }                      	 typeCode:  56	rightbrace
word: output                 	 typeCode:  27	identifier
word: j                      	 typeCode:  27	identifier
word: ++                     	 typeCode:  32	addadd
word: setWrod                	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: input                  	 typeCode:  27	identifier
word: +                      	 typeCode:  30	add
word: i                      	 typeCode:  27	identifier
word: k                      	 typeCode:  27	identifier
word: -                      	 typeCode:  33	sub
word: i                      	 typeCode:  27	identifier
word: realev                 	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: ;                      	 typeCode:  48	semicolon
word: i                      	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: k                      	 typeCode:  27	identifier
word: ;                      	 typeCode:  48	semicolon
word: continue               	 typeCode:  22	key word
word: ;                      	 typeCode:  48	semicolon
word: }                      	 typeCode:  56	rightbrace
word: else                   	 typeCode:  12	key word
word: {                      	 typeCode:  55	leftbrace
word: errorExit              	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: )                      	 typeCode:  50	rightbracket
word: ;                      	 typeCode:  48	semicolon
word: }                      	 typeCode:  56	rightbrace
word: }                      	 typeCode:  56	rightbrace
word: else                   	 typeCode:  12	key word
word: {                      	 typeCode:  55	leftbrace
word: output                 	 typeCode:  27	identifier
word: j                      	 typeCode:  27	identifier
word: ++                     	 typeCode:  32	addadd
word: setWrod                	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: input                  	 typeCode:  27	identifier
word: +                      	 typeCode:  30	add
word: i                      	 typeCode:  27	identifier
word: k                      	 typeCode:  27	identifier
word: -                      	 typeCode:  33	sub
word: i                      	 typeCode:  27	identifier
word: integerv               	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: ;                      	 typeCode:  48	semicolon
word: i                      	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: k                      	 typeCode:  27	identifier
word: ;                      	 typeCode:  48	semicolon
word: continue               	 typeCode:  22	key word
word: ;                      	 typeCode:  48	semicolon
word: }                      	 typeCode:  56	rightbrace
word: }                      	 typeCode:  56	rightbrace
word: if                     	 typeCode:   3	key word
word: (                      	 typeCode:  49	leftbracket
word: ch                     	 typeCode:  27	identifier
word: ==                     	 typeCode:  41	equal
word: '\''                   	 typeCode:  54	character
word: )                      	 typeCode:  50	rightbracket
word: {                      	 typeCode:  55	leftbrace
word: if                     	 typeCode:   3	key word
word: (                      	 typeCode:  49	leftbracket
word: i                      	 typeCode:  27	identifier
word: +                      	 typeCode:  30	add
word: 1                      	 typeCode:  28	integer
word: <                      	 typeCode:  42	less
word: len                    	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: {                      	 typeCode:  55	leftbrace
word: char                   	 typeCode:  17	key word
word: tmpch                  	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: input                  	 typeCode:  27	identifier
word: i                      	 typeCode:  27	identifier
word: +                      	 typeCode:  30	add
word: 1                      	 typeCode:  28	integer
word: ;                      	 typeCode:  48	semicolon
word: if                     	 typeCode:   3	key word
word: (                      	 typeCode:  49	leftbracket
word: tmpch                  	 typeCode:  27	identifier
word: ==                     	 typeCode:  41	equal
word: '\\'                   	 typeCode:  54	character
word: +                      	 typeCode:  30	add
word: 3                      	 typeCode:  28	integer
word: <                      	 typeCode:  42	less
word: len                    	 typeCode:  27	identifier
word: input                  	 typeCode:  27	identifier
word: i                      	 typeCode:  27	identifier
word: +                      	 typeCode:  30	add
word: 3                      	 typeCode:  28	integer
word: ==                     	 typeCode:  41	equal
word: '\''                   	 typeCode:  54	character
word: )                      	 typeCode:  50	rightbracket
word: {                      	 typeCode:  55	leftbrace
word: output                 	 typeCode:  27	identifier
word: j                      	 typeCode:  27	identifier
word: ++                     	 typeCode:  32	addadd
word: setWrod                	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: input                  	 typeCode:  27	identifier
word: +                      	 typeCode:  30	add
word: i                      	 typeCode:  27	identifier
word: +                      	 typeCode:  30	add
word: 1                      	 typeCode:  28	integer
word: 2                      	 typeCode:  28	integer
word: characterv             	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: ;                      	 typeCode:  48	semicolon
word: i                      	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: i                      	 typeCode:  27	identifier
word: +                      	 typeCode:  30	add
word: 4                      	 typeCode:  28	integer
word: ;                      	 typeCode:  48	semicolon
word: continue               	 typeCode:  22	key word
word: ;                      	 typeCode:  48	semicolon
word: }                      	 typeCode:  56	rightbrace
word: else                   	 typeCode:  12	key word
word: if                     	 typeCode:   3	key word
word: (                      	 typeCode:  49	leftbracket
word: tmpch                  	 typeCode:  27	identifier
word: >=                     	 typeCode:  46	greaterequal
word: 20                     	 typeCode:  28	integer
word: tmpch                  	 typeCode:  27	identifier
word: <=                     	 typeCode:  44	lessequal
word: 126                    	 typeCode:  28	integer
word: input                  	 typeCode:  27	identifier
word: i                      	 typeCode:  27	identifier
word: +                      	 typeCode:  30	add
word: 2                      	 typeCode:  28	integer
word: ==                     	 typeCode:  41	equal
word: '\''                   	 typeCode:  54	character
word: )                      	 typeCode:  50	rightbracket
word: {                      	 typeCode:  55	leftbrace
word: output                 	 typeCode:  27	identifier
word: j                      	 typeCode:  27	identifier
word: ++                     	 typeCode:  32	addadd
word: setWrod                	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: input                  	 typeCode:  27	identifier
word: +                      	 typeCode:  30	add
word: i                      	 typeCode:  27	identifier
word: +                      	 typeCode:  30	add
word: 1                      	 typeCode:  28	integer
word: 1                      	 typeCode:  28	integer
word: characterv             	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: ;                      	 typeCode:  48	semicolon
word: i                      	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: i                      	 typeCode:  27	identifier
word: +                      	 typeCode:  30	add
word: 3                      	 typeCode:  28	integer
word: ;                      	 typeCode:  48	semicolon
word: continue               	 typeCode:  22	key word
word: ;                      	 typeCode:  48	semicolon
word: }                      	 typeCode:  56	rightbrace
word: else                   	 typeCode:  12	key word
word: {                      	 typeCode:  55	leftbrace
word: errorExit              	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: )                      	 typeCode:  50	rightbracket
word: ;                      	 typeCode:  48	semicolon
word: }                      	 typeCode:  56	rightbrace
word: }                      	 typeCode:  56	rightbrace
word: else                   	 typeCode:  12	key word
word: {                      	 typeCode:  55	leftbrace
word: errorExit              	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: )                      	 typeCode:  50	rightbracket
word: ;                      	 typeCode:  48	semicolon
word: }                      	 typeCode:  56	rightbrace
word: }                      	 typeCode:  56	rightbrace
word: if                     	 typeCode:   3	key word
word: (                      	 typeCode:  49	leftbracket
word: ch                     	 typeCode:  27	identifier
word: ==                     	 typeCode:  41	equal
word: '"'                    	 typeCode:  54	character
word: )                      	 typeCode:  50	rightbracket
word: {                      	 typeCode:  55	leftbrace
word: }                      	 typeCode:  56	rightbrace
word: if                     	 typeCode:   3	key word
word: (                      	 typeCode:  49	leftbracket
word: ch                     	 typeCode:  27	identifier
word: ==                     	 typeCode:  41	equal
word: '#'                    	 typeCode:  54	character
word: )                      	 typeCode:  50	rightbracket
word: {                      	 typeCode:  55	leftbrace
word: if                     	 typeCode:   3	key word
word: (                      	 typeCode:  49	leftbracket
word: i                      	 typeCode:  27	identifier
word: +                      	 typeCode:  30	add
word: 7                      	 typeCode:  28	integer
word: <                      	 typeCode:  42	less
word: len                    	 typeCode:  27	identifier
word: strncmp                	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: input                  	 typeCode:  27	identifier
word: +                      	 typeCode:  30	add
word: i                      	 typeCode:  27	identifier
word: codeToStr              	 typeCode:  27	identifier
word: 0                      	 typeCode:  28	integer
word: 8                      	 typeCode:  28	integer
word: )                      	 typeCode:  50	rightbracket
word: ==                     	 typeCode:  41	equal
word: 0                      	 typeCode:  28	integer
word: )                      	 typeCode:  50	rightbracket
word: {                      	 typeCode:  55	leftbrace
word: output                 	 typeCode:  27	identifier
word: j                      	 typeCode:  27	identifier
word: ++                     	 typeCode:  32	addadd
word: setWrod                	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: input                  	 typeCode:  27	identifier
word: +                      	 typeCode:  30	add
word: i                      	 typeCode:  27	identifier
word: 8                      	 typeCode:  28	integer
word: includev               	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: ;                      	 typeCode:  48	semicolon
word: i                      	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: i                      	 typeCode:  27	identifier
word: +                      	 typeCode:  30	add
word: 8                      	 typeCode:  28	integer
word: ;                      	 typeCode:  48	semicolon
word: }                      	 typeCode:  56	rightbrace
word: else                   	 typeCode:  12	key word
word: if                     	 typeCode:   3	key word
word: (                      	 typeCode:  49	leftbracket
word: i                      	 typeCode:  27	identifier
word: +                      	 typeCode:  30	add
word: 6                      	 typeCode:  28	integer
word: <                      	 typeCode:  42	less
word: len                    	 typeCode:  27	identifier
word: strncmp                	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: input                  	 typeCode:  27	identifier
word: +                      	 typeCode:  30	add
word: i                      	 typeCode:  27	identifier
word: codeToStr              	 typeCode:  27	identifier
word: 1                      	 typeCode:  28	integer
word: 7                      	 typeCode:  28	integer
word: )                      	 typeCode:  50	rightbracket
word: ==                     	 typeCode:  41	equal
word: 0                      	 typeCode:  28	integer
word: )                      	 typeCode:  50	rightbracket
word: {                      	 typeCode:  55	leftbrace
word: output                 	 typeCode:  27	identifier
word: j                      	 typeCode:  27	identifier
word: ++                     	 typeCode:  32	addadd
word: setWrod                	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: input                  	 typeCode:  27	identifier
word: +                      	 typeCode:  30	add
word: i                      	 typeCode:  27	identifier
word: 7                      	 typeCode:  28	integer
word: definev                	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: ;                      	 typeCode:  48	semicolon
word: i                      	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: i                      	 typeCode:  27	identifier
word: +                      	 typeCode:  30	add
word: 7                      	 typeCode:  28	integer
word: ;                      	 typeCode:  48	semicolon
word: }                      	 typeCode:  56	rightbrace
word: else                   	 typeCode:  12	key word
word: {                      	 typeCode:  55	leftbrace
word: errorExit              	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: )                      	 typeCode:  50	rightbracket
word: ;                      	 typeCode:  48	semicolon
word: }                      	 typeCode:  56	rightbrace
word: }                      	 typeCode:  56	rightbrace
word: i                      	 typeCode:  27	identifier
word: ++                     	 typeCode:  32	addadd
word: ;                      	 typeCode:  48	semicolon
word: }                      	 typeCode:  56	rightbrace
word: return                 	 typeCode:  18	key word
word: j                      	 typeCode:  27	identifier
word: ;                      	 typeCode:  48	semicolon
word: }                      	 typeCode:  56	rightbrace
word: int                    	 typeCode:   8	key word
word: main                   	 typeCode:   2	key word
word: (                      	 typeCode:  49	leftbracket
word: )                      	 typeCode:  50	rightbracket
word: {                      	 typeCode:  55	leftbrace
word: freopen                	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: "data.out"             	 typeCode:  53	string
word: "w+"                   	 typeCode:  53	string
word: stdout                 	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: ;                      	 typeCode:  48	semicolon
word: freopen                	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: "data.in"              	 typeCode:  53	string
word: "r"                    	 typeCode:  53	string
word: stdin                  	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: ;                      	 typeCode:  48	semicolon
word: char                   	 typeCode:  17	key word
word: *                      	 typeCode:  36	multiple
word: sourceCodeInput        	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: (                      	 typeCode:  49	leftbracket
word: char                   	 typeCode:  17	key word
word: *                      	 typeCode:  36	multiple
word: )                      	 typeCode:  50	rightbracket
word: malloc                 	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: maxn                   	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: ;                      	 typeCode:  48	semicolon
word: char                   	 typeCode:  17	key word
word: *                      	 typeCode:  36	multiple
word: preprocessOutput       	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: (                      	 typeCode:  49	leftbracket
word: char                   	 typeCode:  17	key word
word: *                      	 typeCode:  36	multiple
word: )                      	 typeCode:  50	rightbracket
word: malloc                 	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: maxn                   	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: ;                      	 typeCode:  48	semicolon
word: memset                 	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: preprocessOutput       	 typeCode:  27	identifier
word: 0                      	 typeCode:  28	integer
word: maxn                   	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: ;                      	 typeCode:  48	semicolon
word: memset                 	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: sourceCodeInput        	 typeCode:  27	identifier
word: 0                      	 typeCode:  28	integer
word: maxn                   	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: ;                      	 typeCode:  48	semicolon
word: for                    	 typeCode:  23	key word
word: (                      	 typeCode:  49	leftbracket
word: int                    	 typeCode:   8	key word
word: i                      	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: 0                      	 typeCode:  28	integer
word: ;                      	 typeCode:  48	semicolon
word: scanf                  	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: "%c"                   	 typeCode:  53	string
word: sourceCodeInput        	 typeCode:  27	identifier
word: +                      	 typeCode:  30	add
word: i                      	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: !=                     	 typeCode:  43	notequal
word: EOF                    	 typeCode:  27	identifier
word: ;                      	 typeCode:  48	semicolon
word: i                      	 typeCode:  27	identifier
word: ++                     	 typeCode:  32	addadd
word: )                      	 typeCode:  50	rightbracket
word: ;                      	 typeCode:  48	semicolon
word: preprocess             	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: sourceCodeInput        	 typeCode:  27	identifier
word: preprocessOutput       	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: ;                      	 typeCode:  48	semicolon
word: for                    	 typeCode:  23	key word
word: (                      	 typeCode:  49	leftbracket
word: int                    	 typeCode:   8	key word
word: i                      	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: 0                      	 typeCode:  28	integer
word: ;                      	 typeCode:  48	semicolon
word: i                      	 typeCode:  27	identifier
word: <                      	 typeCode:  42	less
word: (                      	 typeCode:  49	leftbracket
word: int                    	 typeCode:   8	key word
word: )                      	 typeCode:  50	rightbracket
word: strlen                 	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: preprocessOutput       	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: ;                      	 typeCode:  48	semicolon
word: i                      	 typeCode:  27	identifier
word: ++                     	 typeCode:  32	addadd
word: )                      	 typeCode:  50	rightbracket
word: {                      	 typeCode:  55	leftbrace
word: printf                 	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: "%c"                   	 typeCode:  53	string
word: preprocessOutput       	 typeCode:  27	identifier
word: i                      	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: ;                      	 typeCode:  48	semicolon
word: }                      	 typeCode:  56	rightbrace
word: puts                   	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: ""                     	 typeCode:  53	string
word: )                      	 typeCode:  50	rightbracket
word: ;                      	 typeCode:  48	semicolon
word: wordTuple              	 typeCode:  27	identifier
word: *                      	 typeCode:  36	multiple
word: wordParseOutput        	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: (                      	 typeCode:  49	leftbracket
word: wordTuple              	 typeCode:  27	identifier
word: *                      	 typeCode:  36	multiple
word: )                      	 typeCode:  50	rightbracket
word: malloc                 	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: sizeof                 	 typeCode:  25	key word
word: (                      	 typeCode:  49	leftbracket
word: wordTuple              	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: *                      	 typeCode:  36	multiple
word: maxn                   	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: ;                      	 typeCode:  48	semicolon
word: int                    	 typeCode:   8	key word
word: wordsLen               	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: wordParse              	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: preprocessOutput       	 typeCode:  27	identifier
word: wordParseOutput        	 typeCode:  27	identifier
word: )                      	 typeCode:  50	rightbracket
word: ;                      	 typeCode:  48	semicolon
word: for                    	 typeCode:  23	key word
word: (                      	 typeCode:  49	leftbracket
word: int                    	 typeCode:   8	key word
word: i                      	 typeCode:  27	identifier
word: =                      	 typeCode:  47	assign$
word: 0                      	 typeCode:  28	integer
word: ;                      	 typeCode:  48	semicolon
word: i                      	 typeCode:  27	identifier
word: <                      	 typeCode:  42	less
word: wordsLen               	 typeCode:  27	identifier
word: ;                      	 typeCode:  48	semicolon
word: i                      	 typeCode:  27	identifier
word: ++                     	 typeCode:  32	addadd
word: )                      	 typeCode:  50	rightbracket
word: {                      	 typeCode:  55	leftbrace
word: wordParseOutput        	 typeCode:  27	identifier
word: i                      	 typeCode:  27	identifier
word: printWord              	 typeCode:  27	identifier
word: (                      	 typeCode:  49	leftbracket
word: )                      	 typeCode:  50	rightbracket
word: ;                      	 typeCode:  48	semicolon
word: }                      	 typeCode:  56	rightbrace
word: return                 	 typeCode:  18	key word
word: 0                      	 typeCode:  28	integer
word: ;                      	 typeCode:  48	semicolon
word: }                      	 typeCode:  56	rightbrace
